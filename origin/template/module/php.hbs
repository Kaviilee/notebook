<div id="PHP" class="content"  style="display:none">
		<ul>
			<li>
				<h3>基本语法<span>-</span></h3>
				<div>
					<h4>[<span>-</span>]基础概念</h4>
					<ul>
						<li><a href="">comment</a><span>注释 //单行  /*多行*/  #shell风格</span></li>
						<li><a href="">echo</a>输出<span>
							echo() 向浏览器输出,无任何返回值,输出一个或多个字符串
							<br />print() 向浏览器输出,返回值总为1,只允许输出一个字符串
							<br />printf() 向浏览器输出,返回整型,C语言模式
							<br />sprintf() 驻留在内存,返回字符串,需要echo输出
							<br />常用类型指示符
							<br /><table>
								<tbody>
								<tr>
								<td valign="top" width="140">类型</td>
								<td valign="top" width="293">描述</td>
								</tr>
								<tr>
								<td valign="top" width="140">%b</td>
								<td valign="top" width="293">整数，显示为二进制</td>
								</tr>
								<tr>
								<td valign="top" width="140">%c</td>
								<td valign="top" width="293">整数，显示为ASCII<span style="font-family: 宋体;">字符</span></td>
								</tr>
								<tr>
								<td valign="top" width="140">%d</td>
								<td valign="top" width="293">整数，显示为有符号十进制数</td>
								</tr>
								<tr>
								<td valign="top" width="140">%f</td>
								<td valign="top" width="293">浮点数，显示为浮点数</td>
								</tr>
								<tr>
								<td valign="top" width="140">%o</td>
								<td valign="top" width="293">整数，显示为八进制数</td>
								</tr>
								<tr>
								<td valign="top" width="140">%s</td>
								<td valign="top" width="293">字符串，显示为字符串</td>
								</tr>
								<tr>
								<td valign="top" width="140">%u</td>
								<td valign="top" width="293">整数，显示为无符号十进制数</td>
								</tr>
								<tr>
								<td valign="top" width="140">%x</td>
								<td valign="top" width="293">整数，显示为小写的十六进制数</td>
								</tr>
								<tr>
								<td valign="top" width="140">%X</td>
								<td valign="top" width="293">整数，显示为大写的十六进制数</td>
								</tr>
								</tbody>
							</table>
						</span></li>
						<li><a href="">.</a>字符串连接<span>
							1.双引号解析变量，单引号不解析变量和转义符
							<br />2.变量写在引号中后面直接接中文字符时报错，单独写出来用连接符连接
						</span></li>
						<li><a href="">转移序列</a><span>
							部分常用的转义字符
							<table align="center">
								<tbody>
								<tr>
								<td valign="top" width="154">转义序列</td>
								<td valign="top" width="311">描述</td>
								</tr>
								<tr>
								<td valign="top" width="154">\n</td>
								<td valign="top" width="311">换行符</td>
								</tr>
								<tr>
								<td valign="top" width="154">\r</td>
								<td valign="top" width="311">回车</td>
								</tr>
								<tr>
								<td valign="top" width="154">\t</td>
								<td valign="top" width="311">水平制表图</td>
								</tr>
								<tr>
								<td valign="top" width="154">\\</td>
								<td valign="top" width="311">反斜杠</td>
								</tr>
								<tr>
								<td valign="top" width="154">\$</td>
								<td valign="top" width="311">美元符</td>
								</tr>
								<tr>
								<td valign="top" width="154">\"</td>
								<td valign="top" width="311">双引号</td>
								</tr>
								</tbody>
							</table>
						</span></li>
						<li><a href="">@</a><span>错误抑制操作符</span></li>
						<li><a href="">数组操作符</a><span>
							数组操作符
							<table align="center">
								<tbody>
								<tr>
								<td valign="center" width="124">操作符</td>
								<td valign="center" width="124">使用方法</td>
								<td valign="center" width="124">使用方法</td>
								<td valign="center" width="124">说明</td>
								</tr>
								<tr>
								<td valign="center" width="124">+</td>
								<td valign="center" width="124">联合</td>
								<td valign="center" width="124">!$b</td>
								<td valign="center" width="124">返回一个包含了<span style="font-family: 'Times New Roman';">$a</span><span style="font-family: 宋体;">和</span><span style="font-family: 'Times New Roman';">$b</span><span style="font-family: 宋体;">中所有元素的数组</span></td>
								</tr>
								<tr>
								<td valign="center" width="124">= =</td>
								<td valign="center" width="124">等价</td>
								<td valign="center" width="124">$a&amp;&amp;$b</td>
								<td valign="center" width="124">如果<span style="font-family: 'Times New Roman';">$a</span><span style="font-family: 宋体;">和</span><span style="font-family: 'Times New Roman';">$b</span><span style="font-family: 宋体;">具有相同的元素，返回</span><span style="font-family: 'Times New Roman';">true</span></td>
								</tr>
								<tr>
								<td valign="center" width="124">= = =</td>
								<td valign="center" width="124">恒等</td>
								<td valign="center" width="124">$a||$b</td>
								<td valign="center" width="124">如果<span style="font-family: 'Times New Roman';">$a</span><span style="font-family: 宋体;">和</span><span style="font-family: 'Times New Roman';">$b</span><span style="font-family: 宋体;">具有相同的元素以及相同的顺序，返回</span><span style="font-family: 'Times New Roman';">true</span></td>
								</tr>
								<tr>
								<td valign="center" width="124">!=</td>
								<td valign="center" width="124">非等价</td>
								<td valign="center" width="124">$a and $b</td>
								<td valign="center" width="124">如果<span style="font-family: 'Times New Roman';">$a</span><span style="font-family: 宋体;">和</span><span style="font-family: 'Times New Roman';">$b</span><span style="font-family: 宋体;">不是等价的，返回</span><span style="font-family: 'Times New Roman';">true</span></td>
								</tr>
								<tr>
								<td valign="center" width="124">&lt;&gt;</td>
								<td valign="center" width="124">非等价</td>
								<td valign="center" width="124">&nbsp;</td>
								<td valign="center" width="124">如果<span style="font-family: 'Times New Roman';">$a</span><span style="font-family: 宋体;">和</span><span style="font-family: 'Times New Roman';">$b</span><span style="font-family: 宋体;">不是等价的，返回</span><span style="font-family: 'Times New Roman';">true</span></td>
								</tr>
								<tr>
								<td valign="center" width="124">!= =</td>
								<td valign="center" width="124">非恒等</td>
								<td valign="center" width="124">$a or $b</td>
								<td valign="center" width="124">如果<span style="font-family: 'Times New Roman';">$a</span><span style="font-family: 宋体;">和</span><span style="font-family: 'Times New Roman';">$b</span><span style="font-family: 宋体;">不是恒等的，返回</span><span style="font-family: 'Times New Roman';">true</span></td>
								</tr>
								</tbody>
							</table>
						</span></li>
						<li><a href="">退出循环</a><span>
							第一种： break; 退出循环； 
							<br />第二种是 exit ;退出程序 
							<br />第三种是 continue;退出当前循环
						</span></li>
					</ul>
					<h4>[<span>-</span>]变量作用域</h4>
					<ul>
						<li><a href="">变量规则</a><span>
							变量以 $ 符号开始，后面跟着变量的名称
							<br />变量名必须以字母或者下划线字符开始
							<br />变量名只能包含字母数字字符以及下划线（A-z、0-9 和 _ ）
							<br />变量名不能包含空格
							<br />变量名是区分大小写的（$y 和 $Y 是两个不同的变量）
							<br />PHP 没有声明变量的命令。变量在您第一次赋值给它的时候被创建：
						</span></li>
						<li><a href="">global</a>$global<span>全局变量
							<br />在所有函数外部定义的变量，拥有全局作用域。
							<br />除了函数外，全局变量可以被脚本中的任何部分访问，要在一个函数中访问一个全局变量，需要使用 global 关键字。
							<br />global 关键字用于函数内访问全局变量。在函数内调用函数外定义的全局变量，我们需要在函数中的变量前加上 global 关键字
							<textarea name="" id="" cols="30" rows="10">
								$x=5;
								$y=10;
								function myTest(){
									global $x,$y;
									$y=$x+$y;
								}
							</textarea>
							<br />PHP 将所有全局变量存储在一个名为 $GLOBALS[index] 的数组中。 index 保存变量的名称。这个数组可以在函数内部访问，也可以直接用来更新全局变量。
							<br />$GLOBALS['变量名']访问或设置全局变量。
							<br />echo var_dump($GLOBALS); 查看所有全局变量
						</span></li>
						<li><a href="">static</a>$local<span>局部变量
							<br />当一个函数完成时，它的所有本地变量通常都会被删除。然而，有时候您希望某个局部变量不要被删除。
							<br />在函数内部创建并被声明为静态的变量无法在函数外部可见， 但是可以在函数的多次多次执行过程中保持改值
							<br />注释：该变量仍然是函数的局部变量。
						</span></li>
						<li><a href="">define</a>('VAR','val',[true])<span>常量
							<br />1.常量不需要用$修饰符
							<br />2.一旦设置不可更改
							<br />3.三个参数,常量名,值,是否大小写敏感(true为不敏感)
							<br />默认一般常量均用大写
							<br />常量只可以保存布尔值、 整数、 浮点数或字符串数据 。这些类型都是标量数据
						</span></li>
						<li><a href=""></a><span></span></li>
					</ul>
					<h4>[<span>-</span>]超级全局变量</h4>
					<ul>
						<li><a href="">$GLOBALS</a><span>所有全局变量数组</span></li>
						<li><a href="">$_SERVER</a><span>服务器环境变量数组</span></li>
						<li><a href="">$_GET</a><span>通过 GET 方法传递给该脚本的变量数组</span></li>
						<li><a href="">$_POST</a><span>通过 POST方法传递给该脚本的变量数组</span></li>
						<li><a href="">$_COOKIE</a><span>cookie 变量数组</span></li>
						<li><a href="">$_FILES</a><span>与文件上载相关的变量数组</span></li>
						<li><a href="">$_ENV</a><span>环境变量数组</span></li>
						<li><a href="">$_REQUEST</a><span>所有用户输入的变量数组</span></li>
						<li><a href="">$_SESSION</a><span>会话变量数组</span></li>
					</ul>
				</div>
			</li>
			<li>
				<h3>数据类型<span>-</span></h3>
				<div>
					<h4>[<span>+</span>]类型</h4>
					<ul style="display:none">
						<li><a href="">integer</a><span>整数</span></li>
						<li><a href="">float</a><span>浮点数,double,双精度</span></li>
						<li><a href="">string</a><span>字符串</span></li>
						<li><a href="">boolean</a><span>布尔,转换为数字时为1和空(而非0)</span></li>
						<li><a href="">array</a><span>数组</span></li>
						<li><a href="">object</a><span>对象</span></li>
						<li><a href="">NULL</a><span>空值</span></li>
					</ul>
					<h4>[<span>-</span>]检测</h4>
					<ul>
						<li><a href="">var_dump()</a><span>返回变量的数据类型和值</span></li>
						<li><a href="">gettype</a>($a)<span>返回类型字符串</span></li>
						<li><a href="">settype</a>($a,'type')<span>返回类型字符串</span></li>
						<li><a href="">isset()</a><span>判断变量是否存在,返回1或空</span></li>
						<li><a href="">unset()</a><span>销毁变量</span></li>
						<li><a href="">empty()</a><span>判断一个变量的值是否为空,返回1或空<br />
						""、0、"0"、NULL、FALSE、array()、var $var; 以及没有任何属性的对象都将被认为是空的
						</span></li>
					</ul>
					<h4>[<span>+</span>]检测·更多</h4>
					<ul style="display:none">
						<li><a href="">is_array()</a><span></span></li>
						<li><a href="">is_double()</a><span></span></li>
						<li><a href="">is_float()</a><span></span></li>
						<li><a href="">is_real()</a><span></span></li>
						<li><a href="">is_long()</a><span></span></li>
						<li><a href="">is_int()</a><span></span></li>
						<li><a href="">is_integer()</a><span></span></li>
						<li><a href="">is_string()</a><span></span></li>
						<li><a href="">is_object()</a><span></span></li>
						<li><a href="">is_resource()</a><span></span></li>
						<li><a href="">is_null()</a><span></span></li>
						<li><a href="">is_numeric()</a><span></span></li>
					</ul>
					<h4>[<span>-</span>]转换</h4>
					<ul>
						<li><a href="">intval()</a><span>
							获取变量的整数值,字符串数字/浮点数 -> 整数(非四舍五入)
							<br />其他 -> 0
						</span></li>
						<li><a href="">floatval()</a><span>获取变量的浮点值</span></li>
						<li><a href="">strval()</a><span>获取变量的字符串值</span></li>
					</ul>
				</div>
			</li>
		</ul>
		<ul>
			<li>
				<h3>字符串<span>-</span></h3>
				<div>
					<h4>[<span>-</span>]常用操作</h4>
					<ul>
						<li><a href="">trim</a>($str,[val])<span>
							trim/chop() 函数移除字符串右侧的空白字符或其他预定义字符。
							<br />rtrim()右侧, ltrim()左侧
							<br />如果 charlist 参数为空，则移除下列字符：
							<br />"\0" - NULL
							<br />"\t" - 制表符
							<br />"\n" - 换行
							<br />"\x0B" - 垂直制表符
							<br />"\r" - 回车
							<br />" " - 空格
							</span></li>
						<li><a href="">nl2br</a>($str)<span>把\n转义符在输出时转换为br</span></li>
						<li><a href="">number_format</a>($int)<span>通过千位分组来格式化数字。</span></li>
						<li><a href="">parse_str</a>()<span>
							<a href="http://www.w3cschool.cc/php/func-string-parse-str.html">参考</a>
							</span></li>
						<li><a href="">similar_text</a>($str1,$str2,[$var])<span>
							计算两个字符串的相似度并返回匹配字符的数目，$var存储百分比相似度
							</span></li>
						<li><a href="">str_replace</a>($from,$to)<span>替换字符串中的一些字符（大小写不敏感）。
							<br />str_ireplace()	替换字符串中的一些字符（大小写不敏感）。
							</span></li>
						<li><a href="">str_pad</a>($str,'.')<span>把字符串填充为新的长度</span></li>
						<li><a href="">str_repeat</a>($str,8)<span>把字符串重复指定的次数。</span></li>
						<li><a href="">str_word_count()</a><span>计算字符串中的单词数。</span></li>
						<li><a href="">strip_tags()</a><span>剥去字符串中的 HTML、XML 以及 PHP 的标签</span></li>
						<li><a href="">strlen()</a><span>返回字符串的长度</span></li>
						<li><a href="">wordwrap</a>($str,12,'\n')<span>按照指定长度对字符串进行折行处理,规定作为分隔符使用的字符（字串断开字符）。默认是 "\n"。</span></li>
						<li><a href="">substr</a>($str,start,[length])<span>返回字符串的一部分。</span></li>
						<li><a href="">strpos</a>($content,$search)<span>
							strpos() 函数用于在字符串内查找一个字符或一段指定的文本。<br />如果在字符串中找到匹配，该函数会返回第一个匹配的字符位置。如果未找到匹配，则返回 FALSE。
							</span></li>
					</ul>
					<h4>[<span>-</span>]数组转换</h4>
					<ul>
						<li><a href="">chunk_split</a>($str,2,'-')<span>
							分割字符串
							<br />第2个参数:定义字符串块的长度。默认为 76
							<br />第3个参数:定义在每个字符串块之后放置的内容</span></li>
						<li><a href="">str_split</a>($str,1)<span>规定每个数组元素的长度,默认是 1</span></li>
						<li><a href="">explode</a>(',',$str,[0])<span>
							explode() 函数把字符串打散为数组
							<br />separator	必需。规定在哪里分割字符串。
							<br />string	必需。要分割的字符串。
							<br />limit	可选。规定所返回的数组元素的数目。
							<br />可能的值：
							<br />大于 0 - 返回包含最多 limit 个元素的数组
							<br />小于 0 - 返回包含除了最后的 -limit 个元素以外的所有元素的数组
							<br />0 - 返回包含一个元素的数组
						</span></li>
						<li><a href="">join</a>(',',$arr)<span>把数组组合成字符串</span></li>
						<li><a href="">str_getcsv()</a><span>解析 CSV 格式字段的字符串，并返回一个包含所读取字段的数组</span></li>
					</ul>
					<h4>[<span>-</span>]编码转换</h4>
					<ul>
						<li><a href="">md5</a>($str)<span>计算字符串的 MD5 散列。</span></li>
						<li><a href="">md5_file</a>($file)<span>计算文件的 MD5 散列。</span></li>
						<li><a href="">sha1()</a><span>计算字符串的 SHA-1 散列。</span></li>
						<li><a href="">sha1_file()</a><span>计算文件的 SHA-1 散列。</span></li>
					</ul>
				</div>
			</li>
			<li>
				<h3>数学运算<span>-</span></h3>
				<div>
					<h4>[<span>-</span>]常用函数</h4>
					<ul>
						<li><a href="">mt_rand</a>($min,$max)<span>mt_getrandmax()</span></li>
						<li><a href="">rand</a>($min,$max)<span>getrandmax()</span></li>
						<li><a href="http://www.w3cschool.cc/php/php-ref-math.html">Math</a></li>
					</ul>
				</div>
			</li>
		</ul>
	</div>