<div class="u-col">
    <div class="u-block">
        <h3>DOM遍历<span>-</span></h3>
        <div class="u-list">
            <h4>[<span>-</span>] 匹配查找</h4>
            <ul>
                <li>
                    doc.<a href="">documentElement</a>
                    <span>
                        返回文档的根节点（html元素）
                    </span>
                </li>
                <li>
                    doc.<a href="">body</a>
                    <span>
                        返回文档的body元素
                    </span>
                </li>
                <li>
                    doc.<a href="">images</a>
                    <span>
                        返回文档中所有image对象引用
                    </span>
                </li>
                <li>
                    doc.<a href="">links</a>
                    <span>
                        返回文档中所有的a.href + area标签。 <br>
                        document.links.$id > document.links.$name 可按id和name访问,同名时id高于name,同id时,取顺序在前的<br>
                        document.links[i] 可按索引访问
                    </span>
                </li>
                <li>
                    doc.<a href="">anchors</a>
                    <span>
                        返回文档中所有的锚点的集合。即带有name属性的a标签。 <br>
                        document.anchors.length
                    </span>
                </li>
                <li>
                    doc.<a href="">scripts</a>
                    <span>
                        返回页面中所有脚本的集合
                    </span>
                </li>
                <li>
                    doc.<a href="">forms</a>
                    <span>
                        返回文档中所有表单的集合。 <br>
                        document.forms[0]  <br>
                        document.forms.name1
                    </span>
                </li>
            </ul>
            <h4>[<span>-</span>] 层级筛选</h4>
            <ul>
                <li>
                    dom.<a href="">childNodes</a>
                    <span>
                        返回元素的子节点数组
                    </span>
                </li>
                <li>
                    dom.<a href="">firstChild</a>
                    <span>
                        返回元素的第一个子节点。 <br>
                        如果不存在则返回null
                    </span>
                </li>
                <li>
                    dom.<a href="">lastChild</a>
                    <span>
                        返回元素的最后一个子元素。
                    </span>
                </li>
                <li>
                    dom.<a href="">hasChildNodes()</a>
                    <span>
                        检查元素是否具有任何子元素，返回布尔值
                    </span>
                </li>
            </ul>
            <h4>[<span>-</span>] 条件过滤</h4>
            <ul>
                <li>
                    doc.<a href="">getElementById</a><em>('id')</em>
                    <span>
                        返回拥有指定ID的第一个对象的引用。<br>
                        如果没有指定ID的元素返回null。
                    </span>
                </li>
                <li>
                    doc.<a href="">getElementsByTagName</a><em>('tag')</em>
                    <span>
                        返回带有指定标签名的对象的集合。 <br>
                        *返回文档的所有元素。 <br>
                        *返回的元素集合中的0为html
                    </span>
                </li>
                <li class="i-dot-orange">
                    doc.<a href="">getElementsByClassName</a><em>('cls')</em>
                    <span>
                        返回文档中所有指定类名的元素集合。 <br>
                        IE8及以下不支持。
                    </span>
                </li>
                <li>
                    doc.<a href="">getElementsByName</a><em>('name')</em>
                    <span>
                        返回带有指定名称的对象的集合。
                    </span>
                </li>
                <li>
                    doc.<a href="">querySelector</a>('cssExp')
                    <span>
                        返回文档中匹配指定css选择器的第一个元素。 <br>
                        传入的是css选择器，且仅返回第一个元素。 <br>
                        IE8支持，IE6-7不支持。
                    </span>
                </li>
                <li class="i-dot-orange">
                    doc.<a href="">querySelectorAll</a>('cssExp')
                    <span>
                        返回文档中匹配指定css选择器的全部元素。 <br>
                        HTML5新引入，IE8不支持。 <br>
                        此方式生成的集合，无法用.访问到id和name。
                    </span>
                </li>
            </ul>
        </div>
    </div>
    <div class="u-block">
        <h3>DOM更新<span>-</span></h3>
        <div class="u-list">
            <h4>[<span>-</span>] 修改</h4>
            <ul>
                <li>
                    dom.<a href="">appendChild</a>(node)
                    <span>
                        向目标节点末尾添加新的子节点。 <b>(如为原存在于原文档中的节点则原位置会被移除)</b><br>
                        你可以使用 appendChild() 方法移除元素到另外一个元素。 <br>
                        如果文档树中已经存在了 newchild，它将从文档树中删除，然后重新插入它的新位置。 <br>
                        如果 newchild 是 DocumentFragment 节点，则不会直接插入它，而是把它的子节点按序插入当前节点的 childNodes[] 数组的末尾。 <br>
                    </span>
                </li>
                <li>
                    dom.<a href="">insertBefore</a>(node,exist)
                    <span>
                        向目标节点前添加新的节点。 <br>
                        如果被添加的节点是原文档中的节点，则原节点会被移除。
                    </span>
                </li>
            </ul>
            <h4>[<span>-</span>] 添加</h4>
            <ul>
                <li>
                    ele.<a href="">cloneNode</a>([true/false])
                    <span>
                        克隆该节点，包括属性和值。 <br> 
                        传入true表示递归复制该节点的所有子孙节点。
                    </span>
                </li>
                <li>
                    doc.<a href="">creatElement</a>('tag')
                    <span>
                        创建元素节点
                    </span>
                </li>
                <li>
                    doc.<a href="">creatTextNode</a>('str')
                    <span>
                        创建文本节点
                    </span>
                </li>
                <li>
                    doc.<a href="">creatDocumentFragment()</a>
                    <span>
                        创建一个虚拟的节点对象，节点对象包含所有属性和方法。 <br>
                        var temp=document.createDocumentFragment();
                    </span>
                </li>
                <li>
                    doc.<a href="">creatComment</a>('str')
                    <span>
                        创建注释节点
                    </span>
                </li>
                <li class="i-dot-orange">
                    doc.<a href="">importNode</a>(node,deep)
                    <span>
                        把一个节点从另一个文档复制到该文档以便应用。 <br>
                        第2个参数为必须，true代表还要复制该节点的所有子孙节点。 <br>
                        IE8及以下不支持。 <br>
                        <a href="http://www.runoob.com/jsref/met-document-importnode.html">参考资料</a>
                    </span>
                </li>
            </ul>
            <h4>[<span>-</span>] 移除</h4>
            <ul>
            </ul>
            <h4>[<span>-</span>] 合并</h4>
            <ul>
                <li>
                    doc.<a href="">normalize()</a>
                    <span>
                        删除空文本节点，并连接相邻节点
                    </span>
                </li>
            </ul>
            <h4>[<span>-</span>] 更新</h4>
            <ul>
                <li>
                    doc.<a href="">write</a>('exp')
                    <span>
                        向文档写入内容 <br>
                    </span>
                </li>
                <li>
                    doc.<a href="">writeln</a>('exp')
                    <span>
                        向文档写入内容，并在末尾添加一个换行符
                    </span>
                </li>
                <li>
                    doc.<a href="">open</a>([MIME],[replace])
                    <span>
                        打开一个输出流来收集docment.write()方法输出的内容。 <br>
                        MIMEtype，默认值是 "text/html"。 <br>
                        replace，当此参数设置后，可引起新文档从父文档继承历史条目。
                    </span>
                </li>
                <li>
                    doc.<a href="">close</a>()
                    <span>
                        关闭用 document.open() 方法打开的输出流，并显示选定的数据。
                    </span>
                </li>
            </ul>
        </div>
    </div>
</div>