<div class="u-col">
    <div class="u-block">
        <h3>Canvas<span>-</span></h3>
        <div class="u-list">
			<h4>[<span>-</span>]核心</h4>
            <ul>
                <li><a href="">getContext("2d")</a><span></span></li>
                <li><a href="">createEvent()</a><span></span></li>
                <li><a href="">toDataURL()</a><span></span></li>
                <li><a href="">save()</a><span>保存当前环境的状态。</span></li>
                <li><a href="">restore()</a><span>返回之前保存过的路径状态和属性。</span></li>
            </ul>
            <h4>[<span>-</span>]图像</h4>
            <ul>
                <li><a href="">drawImage</a>(image,x,y)<span><a href="http://www.w3cschool.cc/tags/canvas-drawimage.html">参考资料</a>
                    <br>在画布上定位图像：
                    <br>JavaScript 语法：  context.drawImage(img,x,y);
                    <br>在画布上定位图像，并规定图像的宽度和高度：
                    <br>JavaScript 语法：  context.drawImage(img,x,y,width,height);
                    <br>剪切图像，并在画布上定位被剪切的部分：
                    <br>JavaScript 语法：  context.drawImage(img,sx,sy,swidth,sheight,x,y,width,height);
                    <textarea name="" id="" cols="60" rows="10">var c=document.getElementById("myCanvas");
                    var ctx=c.getContext("2d");
                    var img=document.getElementById("scream");
                    ctx.drawImage(img,10,10);</textarea></span></li>
                <li><a href="">width</a><span>返回 ImageData 对象的宽度。</span></li>
                <li><a href="">height</a><span>返回 ImageData 对象的高度。</span></li>
                <li><a href="">data</a><span>返回一个对象，其包含指定的 ImageData 对象的图像数据。</span></li>
                <li><a href="">createImageData()</a><span>创建新的、空白的 ImageData 对象。</span></li>
                <li><a href="">getImageData()</a><span>返回 ImageData 对象，该对象为画布上指定的矩形复制像素数据。</span></li>
                <li><a href="">putImageData()</a><span>把图像数据（从指定的 ImageData 对象）放回画布上。</span></li>
                <li><a href="">globalAlpha</a><span>设置或返回绘图的当前 alpha 或透明值。</span></li>
                <li><a href="">globalCompositeOperation</a><span>设置或返回新图像如何绘制到已有的图像上</span></li>
            </ul>
            <h4>[<span>-</span>]颜色样式阴影</h4>
            <ul>
                <li><a href="">fillStyle</a>="col/gra/img"<span>设置fillStyle属性可以是CSS颜色，渐变，或图案</span></li>
                <li><a href="">strokeStyle</a><span>设置或返回用于笔触的颜色、渐变或模式。</span></li>
                <li><a href="">shadowColor</a><span>设置或返回用于阴影的颜色。</span></li>
                <li><a href="">shadowBlur</a><span>设置或返回用于阴影的模糊级别。</span></li>
                <li><a href="">shadowOffsetX</a><span>设置或返回阴影与形状的水平距离。</span></li>
                <li><a href="">shadowOffsetY</a><span>设置或返回阴影与形状的垂直距离。</span></li>
                <li><a href="">createLinearGradient</a>(x,y,x1,y1)<span>线条渐变</span></li>
                <li><a href="">createRadialGradient</a>(x,y,r,x1,y1,r1)<span>径向/圆渐变</span></li>
                <li><a href="">createRadialGradient()</a>t(x0,y0,r0,x1,y1,r1)<span>创建放射状/环形的渐变（用在画布内容上）。</span></li>
                <li><a href="">addColorStop()</a><span>指定颜色停止，参数使用坐标来描述，可以是0至1.</span></li>
                <li><a href="">fillRect</a>(x,y,width,height)<span>fillRect(x,y,width,height) 方法定义了矩形当前的填充方式。</span></li>
            </ul>
            <h4>[<span>-</span>]路径</h4>
            <ul>
                <li><a href="">fill()</a><span>填充当前绘图（路径）。</span></li>
                <li><a href="">stroke()</a><span>绘制已定义的路径。</span></li>
                <li><a href="">beginPath()</a><span>起始一条路径，或重置当前路径。</span></li>
                <li><a href="">moveTo()</a><span>把路径移动到画布中的指定点，不创建线条。</span></li>
                <li><a href="">closePath()</a><span>创建从当前点回到起始点的路径。</span></li>
                <li><a href="">lineTo()</a><span>添加一个新点，然后在画布中创建从该点到最后指定点的线条。</span></li>
                <li><a href="">clip()</a><span>从原始画布剪切任意形状和尺寸的区域。</span></li>
                <li><a href="">quadraticCurveTo()</a><span>创建二次贝塞尔曲线。</span></li>
                <li><a href="">bezierCurveTo()</a><span>创建三次贝塞尔曲线。</span></li>
                <li><a href="">arc()</a><span>创建弧/曲线（用于创建圆形或部分圆）。</span></li>
                <li><a href="">arcTo()</a><span>创建两切线之间的弧/曲线。</span></li>
                <li><a href="">isPointInPath()</a><span>如果指定的点位于当前路径中，则返回 true，否则返回 false。</span></li>
            </ul>
            <h4>[<span>-</span>]线条</h4>
            <ul>
                <li><a href="">lineCap</a><span>设置或返回线条的结束端点样式。</span></li>
                <li><a href="">lineJoin</a><span>设置或返回两条线相交时，所创建的拐角类型。</span></li>
                <li><a href="">lineWidth</a><span>设置或返回当前的线条宽度。</span></li>
                <li><a href="">miterLimit</a><span>设置或返回最大斜接长度。</span></li>
            </ul>
            <h4>[<span>-</span>]矩形</h4>
            <ul>
                <li><a href="">rect()</a><span>创建矩形。</span></li>
                <li><a href="">fillRect()</a><span>绘制"被填充"的矩形。</span></li>
                <li><a href="">strokeRect()</a><span>绘制矩形（无填充）。</span></li>
                <li><a href="">clearRect()</a><span>在给定的矩形内清除指定的像素。</span></li>
            </ul>
            <h4>[<span>-</span>]转换</h4>
            <ul>
                <li><a href="">scale()</a><span>缩放当前绘图至更大或更小。</span></li>
                <li><a href="">rotate()</a><span>旋转当前绘图。</span></li>
                <li><a href="">translate()</a><span>重新映射画布上的 (0,0) 位置。</span></li>
                <li><a href="">transform()</a><span>替换绘图的当前转换矩阵。</span></li>
                <li><a href="">setTransform()</a><span>将当前转换重置为单位矩阵。然后运行 transform()。</span></li>
            </ul>
            <h4>[<span>-</span>]文字</h4>
            <ul>
                <li><a href="">font</a><span>设置或返回文本内容的当前字体属性。 ctx.font="30px Arial";</span></li>
                <li><a href="">textAlign</a><span>设置或返回文本内容的当前对齐方式。</span></li>
                <li><a href="">textBaseline</a><span>设置或返回在绘制文本时使用的当前文本基线。</span></li>
                <li><a href="">fillText</a>(text,x,y)<span>实心文本</span></li>
                <li><a href="">strokeText</a>(text,x,y)<span>空心文本</span></li>
                <li><a href="">measureText()</a><span>返回包含指定文本宽度的对象。</span></li>
            </ul>
        </div>
    </div>
</div>