<!-- NPM、console、其他 -->
<div class="u-col">
    <div class="u-block">
        <h3>console<span>-</span></h3>
        <div class="u-list">
            <h4>[<span>-</span>] 控制台</h4>
            <ul>
                <li>
                    <a href="">new Console</a>(stdout,[stderr])
                    <span>
                        通过传入一个或两个可写流实例，创建一个新的 Console 对象。 stdout 是一个可写流，用于打印日志或输出信息。 stderr 用于输出警告或错误。 如果没有传入 stderr ，则警告或错误输出会被发送到 stdout 。
                    </span>
                </li>
                <li>
                    console.<a href="">log/info</a>([data,..])
                    <span>
                        打印到 stdout，并带上换行符。
                    </span>
                </li>
                <li>
                    console.<a href="">error/warn</a>([data,..])
                    <span>
                        打印到 stderr，并带上换行符。 
                    </span>
                </li>
                <li>
                    console.<a href="">dir</a>(obj,[opt])
                    <span>
                        在 obj 上使用 util.inspect() 并打印结果字符串到 stdout。  <hr>
                        showHidden - 如果为 true，则该对象中的不可枚举属性和 symbol 属性也会显示。默认为 false。 <br>
                        depth - 告诉 util.inspect() 函数当格式化对象时要递归多少次。 这对于检查较大的复杂对象很有用。 默认为 2。 设为 null 可无限递归。<br>
                        colors - 如果为 true，则输出会带有 ANSI 颜色代码。 默认为 false。 颜色是可定制的，详见定制 util.inspect() 颜色。
                    </span>
                </li>
                <li>
                    console.<a href="">time</a>(label)
                    <span>
                        启动一个定时器，用以计算一个操作的持续时间。 定时器由一个唯一的 label 标识。 当调用 console.timeEnd() 时，可以使用相同的 label 来停止定时器，并以毫秒为单位将持续时间输出到 stdout。 定时器持续时间精确到亚毫秒。
                    </span>
                </li>
                <li>
                    console.<a href="">timeEnd</a>(label)
                    <span>
                        停止之前通过调用 console.time() 启动的定时器，并打印结果到 stdout
                    </span>
                </li>
                <li>
                    console.<a href="">count</a>([label])
                    <span>
                        维护一个指定 label 的内部计数器并且输出到 stdout 指定 label 调用 console.count() 的次数。label计数器的显示标签，默认为 'default'。
                    </span>
                </li>
                <li>
                    console.<a href="">countRest</a>([label])
                    <span>
                        重置指定 label 的内部计数器。
                    </span>
                </li>
                <li>
                    console.<a href="">group</a>([label])
                    <span>
                        将后续行的缩进增加两个空格。
                    </span>
                </li>
                <li>
                    console.<a href="">groupEnd()</a>
                    <span>
                        将后续行的缩进减少两个空格。
                    </span>
                </li>
                <li>
                    console.<a href="">clear()</a>
                    <span>
                        当 stdout 是一个 TTY 时，调用 console.clear() 将尝试清除 TTY。 当 stdout 不是一个TTY时，该方法什么都不做。
                    </span>
                </li>
                <li>
                    console.<a href="">assert</a>(val,[msg,..])
                    <span>
                        一个简单的断言测试，验证 value 是否为真。 如果不为真，则抛出 AssertionError。
                    </span>
                </li>
                <li>
                    console.<a href="">trace</a>([msg,..])
                    <span>
                        打印字符串 'Trace :' 到 stderr ，并通过 util.format() 格式化消息与堆栈跟踪在代码中的当前位置。
                    </span>
                </li>
            </ul>
        </div>
    </div>
    <div class="u-block">
        <h3>assert<span>-</span></h3>
        <div class="u-list">
            <h4>[<span>-</span>] 断言</h4>
            <ul>
            </ul>
        </div>
    </div>
    <div class="u-block">
        <h3>NPM<span>-</span></h3>
        <div class="u-list">
            <h4>[<span>-</span>] NPM</h4>
            <ul>
                <li>
                    npm <a href="">install --save-dev</a> $pak
                    <span>
                        本地安装项目，并添加到package中
                    </span>
                </li>
                <li>
                    npm <a href="">install --g</a> $pak
                    <span>
                        全局安装项目 <hr>
                        当目标环境没有时，不会自动依赖安装
                    </span>
                </li>
                <li>
                    npm <a href="">list</a>[-g]
                    <span>
                        查看所有(全局)安装的模块
                    </span>
                </li>
                <li>
                    npm <a href="">list $pak</a>
                    <span>
                        查看某个模块的版本号
                    </span>
                </li>
                <li>
                    npm <a href="">uninstall</a> $pak
                    <span>
                        卸载模块
                    </span>
                </li>
                <li>
                    npm <a href="">update</a> $pak
                    <span>
                        更新模块
                    </span>
                </li>
                <li>
                    npm <a href="">search</a> $pak
                    <span>
                        搜索模块
                    </span>
                </li>
                <li>
                    npm <a href="">init</a>
                    <span>
                        创建一个npm模块
                    </span>
                </li>
                <li>
                    npm <a href="">adduser</a>
                    <span>
                        注册npm资源库
                        npm login 登录
                    </span>
                </li>
                <li>
                    npm <a href="">publish</a>
                    <span>
                        发布npm模块
                    </span>
                </li>
                <li>
                    npm <a href="">unpublish</a> $pak@ver
                    <span>
                        撤销发布自己发布过的某个版本代码
                    </span>
                </li>
            </ul>
            <h4>[<span>-</span>] package.json</h4>
            <ul>
                <li>
                    <a href="">name</a>
                    <span>
                        name - 包名。<br>
                        version - 包的版本号。<br>
                        description - 包的描述。<br>
                        homepage - 包的官网 url 。<br>
                        author - 包的作者姓名。<br>
                        contributors - 包的其他贡献者姓名。<br>
                        repository - 包代码存放的地方的类型，可以是 git 或 svn，git 可在 Github 上。
                    </span>
                </li>
                <li>
                    <a href="">dependencies</a>
                    <span>
                        依赖包 {"pro":"ver"}<br>
                        dependencies 存放项目或组件代码中依赖到的 <br>
                        devDependencies 存放测试代码依赖的包或构建工具的包 <br>
                    </span>
                </li>
                <li>
                    <a href="">main</a>
                    <span>
                        main 字段指定了程序的主入口文件，require('moduleName') 就会加载这个文件
                    </span>
                </li>
                <li>
                    <a href="">scripts</a>
                    <span>
                        可执行的脚本，通过npm run $cmd <br>
                        {"build":"babel src -d lib"}
                    </span>
                </li>
            </ul>
        </div>
    </div>
    <div class="u-block">
        <h3>参考资料<span>-</span></h3>
        <div class="u-list">
            <h4>[<span>-</span>] Doc</h4>
            <ul>
            	<li><a href="https://nodejs.org/dist/latest-v8.x/docs/api/timers.html">官方文档 8.9.3</a><span></span></li>
            	<li><a href="http://nodejs.cn/api/">中文文档</a><span></span></li>
            </ul>
        </div>
        <div class="u-list">
            <h4>[<span>-</span>] Help</h4>
            <ul>
                <li><a href="https://nodejs.org/en/download/package-manager/">sudo yum -y install nodejs</a></li>
            </ul>
        </div>
    </div>
</div>