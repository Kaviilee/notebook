<div class="u-col">
	<div class="u-block">
		<h3>JSON<span>-</span></h3>
		<div class="u-list">
			<h4>[<span>-</span>]JSON</h4>
			<ul>
				<li><a href="">JSON概念</a><span>
					概念：
					<br />它是一种表示结构化数据的形式，JSON是一个格式化的字符串，文件格式后缀为.json
					<br /><br />语法：
					<br />简单值：字符串、数值、布尔值、null，不支持undefined
					<br />对象：一组无序的键值对
					<br />数组：一组有序的值的列表，可以通过索引来访问
					<br /><br />JSON与JS的区别：
					<br />JSON字符串必须使用双引号（单引号会导致语法错误），且对象的属性必须加双引号
					<br />在JS中直接引入一段JSON数据应该用单引号将其括起来，因为它其实代表一个字符串
					<br />如：'{"name" : "Lee","age" : 100}'
					<br />JSON数组与对象比普通JS少了分号与赋值，其本身表示的是字符串
				</span></li>
				<li><a href="">eval</a>('json_str')<span>
					<br />方法一：eval('json_str')
					<br />方法二：JSON对象内置方法(ECMA5)
					<br />*说明：IE7及IE7-需要引用库文件 https://github.com/douglascrockford/JSON-js/
					<br /><textarea name="" id="" cols="30" rows="10"><!--[if lte IE 7]> json2.js <![endif]--></textarea>
				</span></li>
				<li><a href="">JSON.parse</a>('json_str')<span>
					解析（JSON>JS）：把JSON字符串解析为原生JS值
					<br /><textarea name="" id="" cols="60" rows="10">
						JSON.parse('json_str',[还原函数])
						var box = '[{"name" : "a","age" : 1},{"name" : "b","age" : 2}]';
						var json = JSON.parse(box, function (key, value) {
						if (key == 'name') {
						return 'Mr. ' + value;
						} else {
						return value;
						}
						});
						alert(json[0].name);
					</textarea>
				</span></li>
				<li><a href="">JSON.stringify</a>(js_obj)<span>
					转换（JS>JSON）把JS对象序列化为JSON字符串
					<br />JSON.stringify(js_obj,[过滤函数/数组],[缩进])   
					<br />过滤器与缩进为可选 ，当只保留缩进但不过滤时，将过滤器设置为null
					<br />1. 过滤器数组：指定需要的键
					<br /><textarea name="" id="" cols="60" rows="10">
						var box = [{name : 'a', age : 1, height : 177},{name : 'b', age : 2, height : 188}];
						var json = JSON.stringify(box, ['name', 'age'] , 4);
						alert(json);
					</textarea>
					<br />2. 过滤函数：过滤函数与还原函数都接受两个参数，即键和值，都需要返回一个值
					<br /><textarea name="" id="" cols="60" rows="10">
						var box = [{name : 'a', age : 1, height : 177},{name : 'b', age : 2, height : 188}];
						var json = JSON.stringify(box, function (key, value) {
						switch (key) {
						case 'name' :
						return 'Mr. ' + value;
						case 'age' :
						return value + '岁';
						default :
						return value;
						}
						}, 4);
						alert(json);
					</textarea>
					<br />3. 缩进：可以为数字（空格）或指定符号
				</span></li>
				<li><a href="">toJSON()</a><span>
				   JS对象中添加toJSON()方法，自定义过滤一些数据<br />
					<textarea name="" id="" cols="60" rows="10">
						var box = [{name : 'a', age : 1, height : 177, toJSON : function () {
						return this.name;
						}},{name : 'b',age : 2, height : 188, toJSON : function () {
						return this.name;
						}}];
					</textarea>
				</span></li>
				<li><a href="">执行优先级</a><span>
					执行优先级：toJSON() --> 过滤参数 -->  标准序列化 -->  缩进
					<br />如在toJSON中已被过滤的键值则就算过滤参数中仍有设置也已无效
				</span></li>
				<li><a href=""></a><span></span></li>
			</ul>
		</div>
	</div>
	<div class="u-block">
		<h3>Ajax<span>+</span></h3>
		<div class="u-list" style="display:none">
			<!-- <h4>[<span>-</span>]类型检测</h4>
			<ul>
				<li></li>
			</ul>
			<h4>[<span>-</span>]类型转换</h4>
			<ul>
				<li></li>
			</ul> -->
		</div>
	</div>
	<div class="u-block">
		<h3>参考资料<span>-</span></h3>
		<div class="u-list">
			<h4>[<span>-</span>]参考资料</h4>
			<ul>
				<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript">MDN</a></li>
				<li><a href="http://stackoverflow.com/questions/tagged/javascript">StackOverflow</a></li>
				<li><a href=""></a></li>
			</ul>
			<h4>[<span>-</span>]相关书籍</h4>
			<ul>
				<li><a href="http://www.w3cfuns.com/article-5597171-1-1.html">Javascript高级程序设计</a></li>
				<li><a href="http://www.w3cfuns.com/article-5595674-1-1.html">Javascript权威指南</a></li>
				<li><a href="">Javascript编程精解</a></li>
			</ul>
		</div>
	</div>
</div>