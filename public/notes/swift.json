{"version":1581702914837,"name":"swift","data":[{"column":[{"title":"数据类型","barcolor":"","fold":false,"box":[{"title":"数据类型","fold":false,"list":[{"prefix":"","tag":"整型 ","suffix":"Int","desc":"长度与当前平台的原生字长相同。","url":"","summary":"一般来说，你不需要专门指定整数的长度。\nInt8, Int16, Int32, Int64 分别表示 8 位, 16 位, 32 位, 和 64 位的有符号整数形式。\nUInt8, UInt16, UInt32, UInt64 分别表示 8 位, 16 位, 32 位 和 64 位的无符号整数形式。","reference":"","dot":""},{"prefix":"","tag":"浮点型 ","suffix":"Float / Double","desc":"Double精确度很高，至少有15位数字，而 Float 最少只有6位数字。","url":"","summary":"Double 表示64位浮点数。当你需要存储很大或者很高精度的浮点数时请使用此类型。\nFloat 表示32位浮点数。精度要求不高的话可以使用此类型。","reference":"","dot":""},{"prefix":"","tag":"布尔型 ","suffix":"Bool","desc":"值：true,false,nil（没有值）","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"字符型 ","suffix":"Character","desc":"字符指的是单个字母","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"字符串 ","suffix":"String","desc":"","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"可选类型 ","suffix":"Optional","desc":"使用可选类型来处理值可能缺失的情况。可选类型表示有值或没有值。","url":"","summary":"","reference":"参考资料|https://www.runoob.com/swift/swift-optionals.html","dot":""}]},{"title":"类型方法","fold":false,"list":[{"prefix":"","tag":"typealias ","suffix":"new = old","desc":"对当前的类型定义了另一个名字\ntypealias Feet = Int","url":"","summary":"","reference":"","dot":""}]}]},{"title":"语法","barcolor":"","fold":false,"box":[{"title":"声明与作用域","fold":false,"list":[{"prefix":"","tag":"var ","suffix":"x[:type] = val","desc":"定义变量\nvar x:Float = 3.14","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"let ","suffix":"x[:type] = val","desc":"定义常量\nlet x:Float = 3.14159","url":"","summary":"","reference":"","dot":""}]},{"title":"运算符","fold":true,"list":[{"prefix":"","tag":"算术运算符","suffix":"","desc":"加法运算符：x + y\n减法运算符： x - y\n乘法运算符： x * y\n除法运算符：x / y\n余数运算符：x % y\n数值运算符： +x\n负数值运算符：-x","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"关系运算符","suffix":"","desc":"\\> 大于运算符\n\\< 小于运算符\n>= 大于或等于运算符\n<= 小于或等于运算符\n== 相等运算符\n!= 不相等运算符","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"逻辑运算符","suffix":"","desc":"取反运算符：!\n且运算符：&&\n或运算符：||\n三元运算符：?:","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"位运算符","suffix":"","desc":"| 按位或\n& 按位与\n~ 按位取反\n^ 按位异或\n\\<< 左移运算符 \n\n>> 右移运算符\n","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"赋值运算符","suffix":"","desc":"+= -= *= /= %= &= |= ^= <<= >>=","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"区间运算符 ","suffix":"...|..","desc":"闭区间运算符...\t定义一个包含从a到b(包括a和b)的所有值的区间，b必须大于等于a。 ‌ \n半开区间运算符..\t半开区间1..< 5 区间值为 1, 2, 3, 和 4","url":"","summary":"","reference":"","dot":""}]},{"title":"流程控制","fold":false,"list":[{"prefix":"","tag":"if..else..","suffix":"","desc":"if exp {..}\nif exp {..} else {..}\nif exp {..} else if exp {..}","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"switch","suffix":"","desc":"默认中断，无需break。\n如果使用了fallthrough 语句，则会继续执行之后的 case 或 default 语句，不论条件是否满足都会执行。","url":"","summary":"```swift\nswitch exp {\n    case exp :\n        ...\n        [fallthrough]\n    default :\n}\n```","reference":"","dot":""},{"prefix":"","tag":"x?y:z","suffix":"","desc":"三元运算符","url":"","summary":"? 表达式的值是由 Exp1 决定的。如果 Exp1 为真，则计算 Exp2 的值，结果即为整个 ? 表达式的值。如果 Exp1 为假，则计算 Exp3 的值，结果即为整个 ? 表达式的值。","reference":"","dot":""}]},{"title":"循环语句","fold":false,"list":[{"prefix":"","tag":"for .. in ..","suffix":"","desc":"默认取的为具体值 for $val in var\n遍历一个集合里面的所有元素，例如由数字表示的区间、数组中的元素、字符串中的字符。","url":"","summary":"```swift\nimport Cocoa\n\nfor index in 1...5 {\n    print(\"\\(index) 乘于 5 为：\\(index * 5)\")\n}\n\nvar someInts:[Int] = [10, 20, 30]\nfor index in someInts {\n   print( \"index 的值为 \\(index)\")\n}\n```","reference":"","dot":""},{"prefix":"","tag":"while","suffix":"","desc":"while exp {..}","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"repeat..while","suffix":"","desc":"repeat{..}while exp\n相当于do while","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"break","suffix":"","desc":"","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"continue","suffix":"","desc":"","url":"","summary":"","reference":"","dot":""}]}]}]}]}