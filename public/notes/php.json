{"version":1581333966718,"name":"php","data":[{"column":[{"title":"数据类型","barcolor":"","fold":false,"box":[{"title":"数据类型","fold":false,"list":[{"prefix":"","tag":"整型 ","suffix":"int","desc":"","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"浮点型 ","suffix":"float","desc":"","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"布尔型 ","suffix":"bool","desc":"","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"字符串 ","suffix":"string .","desc":"字符串拼接符 .\n使用<<<EOF..EOF;定义大段字符串,自动解析变量,无需转义引号,无需指明换行符","url":"","summary":"```\n<<<EOF\n        <h1>我的第一个标题</h1>\n        <p>我的第一个段落。</p>\nEOF;\n```","reference":"","dot":""},{"prefix":"","tag":"空值 ","suffix":"null","desc":"NULL 值表示变量没有值。NULL 是数据类型为 NULL 的值。\n可以通过设置变量值为 NULL 来清空变量数据","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"数组 ","suffix":"array","desc":"x + y = x与y数组的合集","url":"","summary":"<table class=\"reference\" id=\"table2\">\n<tbody><tr>\n<th width=\"13%\" align=\"left\">运算符</th>\n<th width=\"20%\" align=\"left\">名称</th>\n<th width=\"67%\" align=\"left\">描述</th>\n</tr>\n<tr>\n<td>x + y</td>\n<td>集合</td>\n<td>x 和 y 的集合</td>\n</tr>\n<tr>\n<td>x == y</td>\n<td>相等</td>\n<td>如果 x 和 y 具有相同的键/值对，则返回 true</td>\n</tr>\n<tr>\n<td>x === y</td>\n<td>恒等</td>\n<td>如果 x 和 y 具有相同的键/值对，且顺序相同类型相同，则返回 true</td>\n</tr>\n<tr>\n<td>x != y</td>\n<td>不相等</td>\n<td>如果 x 不等于 y，则返回 true</td>\n</tr>\n<tr>\n<td>x &lt;&gt; y</td>\n<td>不相等</td>\n<td>如果 x 不等于 y，则返回 true</td>\n</tr>\n<tr>\n<td>x !== y</td>\n<td>不恒等</td>\n<td>如果 x 不等于 y，则返回 true</td>\n</tr>\n</tbody></table>","reference":"","dot":""},{"prefix":"","tag":"对象 ","suffix":"object","desc":"","url":"","summary":"","reference":"","dot":""}]},{"title":"类型检测","fold":false,"list":[{"prefix":"obj ","tag":" instanceof ","suffix":"class","desc":"确定一个 PHP 变量是否属于某一类 class 的实例","url":"","summary":"","reference":"","dot":""}]},{"title":"类型转换","fold":false,"list":[{"prefix":"","tag":"(type) ","suffix":"$var","desc":"强制转换类型","url":"","summary":"","reference":"","dot":""}]}]},{"title":"语法","barcolor":"","fold":false,"box":[{"title":"声明与作用域","fold":false,"list":[{"prefix":"","tag":"$x ","suffix":"= val","desc":"函数外部定义的变量为全局变量，函数内部访问需指定global关键词。\n函数内部定义的变量为局部变量，仅函数内部可访问。\n默认变量为传值赋值。","url":"","summary":"在所有函数外部定义的变量，拥有全局作用域。除了函数外，全局变量可以被脚本中的任何部分访问，要在一个函数中访问一个全局变量，需要使用 global 关键字。\n在 PHP 函数内部声明的变量是局部变量，仅能在函数内部访问。","reference":"","dot":""},{"prefix":"","tag":"$x ","suffix":"= &$y","desc":"引用赋值方式","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"global $x ","suffix":"= val","desc":"global 关键字用于函数内访问全局变量。\nPHP 将所有全局变量存储在一个名为 $GLOBALS[index] 的数组中。 index 保存变量的名称。","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"static $x ","suffix":"= val","desc":"当一个函数完成时，它的所有变量通常都会被删除。然而，有时候您希望某个局部变量不要被删除。在第一次声明变量时使用 static 关键字，每次调用该函数时，该变量将会保留着函数前一次被调用时的值。","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"define","suffix":"(x,val)","desc":"定义常量\n常量在定义后，默认是全局变量，可以在整个运行的脚本的任何地方使用","url":"","summary":"name：必选参数，常量名称，即标志符。\nvalue：必选参数，常量的值。\ncase_insensitive ：可选参数，如果设置为 TRUE，该常量则大小写不敏感。默认是大小写敏感的。","reference":"","dot":""}]},{"title":"运算符","fold":false,"list":[{"prefix":"","tag":"算术运算符","suffix":"","desc":"加法运算符：x + y\n减法运算符： x - y\n乘法运算符： x * y\n除法运算符：x / y\n余数运算符：x % y\n自增运算符：++x 或者 x++\n自减运算符：--x 或者 x--","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"赋值运算符","suffix":"","desc":"+= -= *= /= %= .=","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"关系运算符","suffix":"","desc":"\\> 大于运算符\n\\< 小于运算符\n>= 大于或等于运算符\n<= 小于或等于运算符\n== 相等运算符\n=== 严格相等运算符\n!= | <\\> 不相等运算符\n!== 严格不相等运算符","url":"","summary":"","reference":"类型比较表|https://www.runoob.com/php/php-types-comparisons.html","dot":""},{"prefix":"","tag":"逻辑运算符","suffix":"","desc":"取反运算符：!\n且运算符：&& 或 and\n或运算符：|| 或 or\n异或运算符：xor （如果 x 和 y 有且仅有一个为 true，则返回 true）\n三元运算符：x?y:z\nNULL合并运算符：??（PHP7+，等价提供默认值）\n组合比较符：<=> (PHP7+，太空船操作符）","url":"","summary":"$c = $a <=> $b;\n解析如下：\n如果 $a > $b, 则 $c 的值为 1。\n如果 $a == $b, 则 $c 的值为 0。\n如果 $a < $b, 则 $c 的值为 -1。","reference":"","dot":""}]},{"title":"流程控制","fold":false,"list":[{"prefix":"","tag":"if..else..","suffix":"","desc":"if(exp){..}\nif(exp){..}else{..}\nif(exp}{..}elseif(exp){..}\n","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"switch","suffix":"","desc":"","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"x?y:z","suffix":"","desc":"","url":"","summary":"","reference":"","dot":""}]},{"title":"循环语句","fold":false,"list":[{"prefix":"","tag":"while","suffix":"","desc":"","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"do..while","suffix":"","desc":"","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"for","suffix":"","desc":"","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"foreach","suffix":"($arr as $k=>$v)","desc":"foreach 循环用于遍历数组。","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"goto","suffix":"","desc":"跳转至对应label ","url":"","summary":"\nPHP 中的 goto 有一定限制，目标位置只能位于同一个文件和作用域，也就是说无法跳出一个函数或类方法，也无法跳入到另一个函数。也无法跳入到任何循环或者 switch 结构中。可以跳出循环或者 switch，通常的用法是用 goto 代替多层的 break。","reference":"","dot":""}]}]}]},{"column":[{"title":"Title","barcolor":"","fold":false,"box":[{"title":"Sub Title","fold":false,"list":[{"prefix":"","tag":"echo ","suffix":"str,str..","desc":"可以输出一个或多个字符串, 没有返回值","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"print ","suffix":"str","desc":"只允许输出一个字符串，返回值总为 1","url":"","summary":"","reference":"","dot":""}]}]}]}]}