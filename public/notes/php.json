{"version":1581436902662,"name":"php","data":[{"column":[{"title":"数据类型","barcolor":"","fold":false,"box":[{"title":"数据类型","fold":false,"list":[{"prefix":"","tag":"整型 ","suffix":"int","desc":"","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"浮点型 ","suffix":"float","desc":"","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"布尔型 ","suffix":"bool","desc":"","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"字符串 ","suffix":"string .","desc":"字符串拼接符 .\n使用<<<EOF..EOF;定义大段字符串,自动解析变量,无需转义引号,无需指明换行符","url":"","summary":"```\n<<<EOF\n        <h1>我的第一个标题</h1>\n        <p>我的第一个段落。</p>\nEOF;\n```","reference":"","dot":""},{"prefix":"","tag":"空值 ","suffix":"NULL","desc":"NULL 值表示变量没有值。NULL 是数据类型为 NULL 的值。\n可以通过设置变量值为 NULL 来清空变量数据","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"数组 ","suffix":"array","desc":"x + y = x与y数组的合集","url":"","summary":"<table class=\"reference\" id=\"table2\">\n<tbody><tr>\n<th width=\"13%\" align=\"left\">运算符</th>\n<th width=\"20%\" align=\"left\">名称</th>\n<th width=\"67%\" align=\"left\">描述</th>\n</tr>\n<tr>\n<td>x + y</td>\n<td>集合</td>\n<td>x 和 y 的集合</td>\n</tr>\n<tr>\n<td>x == y</td>\n<td>相等</td>\n<td>如果 x 和 y 具有相同的键/值对，则返回 true</td>\n</tr>\n<tr>\n<td>x === y</td>\n<td>恒等</td>\n<td>如果 x 和 y 具有相同的键/值对，且顺序相同类型相同，则返回 true</td>\n</tr>\n<tr>\n<td>x != y</td>\n<td>不相等</td>\n<td>如果 x 不等于 y，则返回 true</td>\n</tr>\n<tr>\n<td>x &lt;&gt; y</td>\n<td>不相等</td>\n<td>如果 x 不等于 y，则返回 true</td>\n</tr>\n<tr>\n<td>x !== y</td>\n<td>不恒等</td>\n<td>如果 x 不等于 y，则返回 true</td>\n</tr>\n</tbody></table>","reference":"","dot":""},{"prefix":"","tag":"对象 ","suffix":"object","desc":"","url":"","summary":"","reference":"","dot":""}]},{"title":"类型检测","fold":false,"list":[{"prefix":"obj ","tag":" instanceof ","suffix":"class","desc":"确定一个 PHP 变量是否属于某一类 class 的实例","url":"","summary":"","reference":"","dot":""}]},{"title":"类型转换","fold":false,"list":[{"prefix":"","tag":"(type) ","suffix":"$var","desc":"强制转换类型","url":"","summary":"","reference":"","dot":""}]}]},{"title":"语法","barcolor":"","fold":false,"box":[{"title":"声明与作用域","fold":false,"list":[{"prefix":"","tag":"$x ","suffix":"= val","desc":"函数外部定义的变量为全局变量，函数内部访问需指定global关键词。\n函数内部定义的变量为局部变量，仅函数内部可访问。\n默认变量为传值赋值。","url":"","summary":"在所有函数外部定义的变量，拥有全局作用域。除了函数外，全局变量可以被脚本中的任何部分访问，要在一个函数中访问一个全局变量，需要使用 global 关键字。\n在 PHP 函数内部声明的变量是局部变量，仅能在函数内部访问。","reference":"","dot":""},{"prefix":"$x = ","tag":"& ","suffix":"$y","desc":"引用赋值方式\n默认所有类型都是复值传递","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"global $x ","suffix":"= val","desc":"global 关键字用于函数内访问全局变量。\nPHP 将所有全局变量存储在一个名为 $GLOBALS[index] 的数组中。 index 保存变量的名称。","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"static $x ","suffix":"= val","desc":"当一个函数完成时，它的所有变量通常都会被删除。然而，有时候您希望某个局部变量不要被删除。在第一次声明变量时使用 static 关键字，每次调用该函数时，该变量将会保留着函数前一次被调用时的值。","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"define","suffix":"(x,val)","desc":"定义常量\n常量在定义后，默认是全局变量，可以在整个运行的脚本的任何地方使用","url":"","summary":"name：必选参数，常量名称，即标志符。\nvalue：必选参数，常量的值。\ncase_insensitive ：可选参数，如果设置为 TRUE，该常量则大小写不敏感。默认是大小写敏感的。","reference":"","dot":""}]},{"title":"运算符","fold":true,"list":[{"prefix":"","tag":"算术运算符","suffix":"","desc":"加法运算符：x + y\n减法运算符： x - y\n乘法运算符： x * y\n除法运算符：x / y\n余数运算符：x % y\n自增运算符：++x 或者 x++\n自减运算符：--x 或者 x--","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"赋值运算符","suffix":"","desc":"+= -= *= /= %= .=","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"关系运算符","suffix":"","desc":"\\> 大于运算符\n\\< 小于运算符\n>= 大于或等于运算符\n<= 小于或等于运算符\n== 相等运算符\n=== 严格相等运算符\n!= | <\\> 不相等运算符\n!== 严格不相等运算符","url":"","summary":"","reference":"类型比较表|https://www.runoob.com/php/php-types-comparisons.html","dot":""},{"prefix":"","tag":"逻辑运算符","suffix":"","desc":"取反运算符：!\n且运算符：&& 或 and\n或运算符：|| 或 or\n异或运算符：xor （如果 x 和 y 有且仅有一个为 true，则返回 true）\n三元运算符：x?y:z\nNULL合并运算符：??（PHP7+，等价提供默认值）\n组合比较符：<=> (PHP7+，太空船操作符）","url":"","summary":"$c = $a <=> $b;\n解析如下：\n如果 $a > $b, 则 $c 的值为 1。\n如果 $a == $b, 则 $c 的值为 0。\n如果 $a < $b, 则 $c 的值为 -1。","reference":"","dot":""}]},{"title":"流程控制","fold":true,"list":[{"prefix":"","tag":"if..else..","suffix":"","desc":"if(exp){..}\nif(exp){..}else{..}\nif(exp}{..}elseif(exp){..}\n","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"switch","suffix":"","desc":"","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"x?y:z","suffix":"","desc":"","url":"","summary":"","reference":"","dot":""}]},{"title":"循环语句","fold":true,"list":[{"prefix":"","tag":"while","suffix":"","desc":"","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"do..while","suffix":"","desc":"","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"for","suffix":"","desc":"","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"foreach","suffix":"($arr as $k=>$v)","desc":"foreach 循环用于遍历数组。","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"goto","suffix":"","desc":"跳转至对应label ","url":"","summary":"\nPHP 中的 goto 有一定限制，目标位置只能位于同一个文件和作用域，也就是说无法跳出一个函数或类方法，也无法跳入到另一个函数。也无法跳入到任何循环或者 switch 结构中。可以跳出循环或者 switch，通常的用法是用 goto 代替多层的 break。","reference":"","dot":""}]}]},{"title":"全局","barcolor":"","fold":false,"box":[{"title":"全局变量","fold":false,"list":[{"prefix":"","tag":"$GLOBALS","suffix":"['var']","desc":"$GLOBALS 是一个包含了全部变量的全局组合数组。变量的名字就是数组的键。\n默认函数外声明的变量都是全局变量，均可通过$GLOBALS['var']访问。","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"$_SERVER","suffix":"[key]","desc":"$_SERVER 是一个包含了诸如头信息(header)、路径(path)、以及脚本位置(script locations)等等信息的数组。","url":"","summary":"<table class=\"reference\">\n    <tbody>\n        <tr>\n            <th style=\"width:35%\">元素/代码</th>\n            <th style=\"width:65%\">描述</th>\n        </tr>\n        <tr>\n            <td>$_SERVER['PHP_SELF']</td>\n            <td>\n                当前执行脚本的文件名，与 document root 有关。例如，在地址为\n                http://example.com/test.php/foo.bar 的脚本中使用\n                $_SERVER['PHP_SELF'] 将得到 /test.php/foo.bar。__FILE__\n                常量包含当前(例如包含)文件的完整路径和文件名。 从 PHP 4.3.0\n                版本开始，如果 PHP\n                以命令行模式运行，这个变量将包含脚本名。之前的版本该变量不可用。\n            </td>\n        </tr>\n        <tr>\n            <td>$_SERVER['GATEWAY_INTERFACE']</td>\n            <td>服务器使用的 CGI 规范的版本；例如，\"CGI/1.1\"。</td>\n        </tr>\n\n        <tr>\n            <td>$_SERVER['SERVER_ADDR']</td>\n            <td>当前运行脚本所在的服务器的 IP 地址。</td>\n        </tr>\n        <tr>\n            <td>$_SERVER['SERVER_PROTOCOL']</td>\n            <td>请求页面时通信协议的名称和版本。例如，\"HTTP/1.0\"。</td>\n        </tr>\n        <tr>\n            <td>$_SERVER['REQUEST_METHOD']</td>\n            <td>\n                访问页面使用的请求方法；例如，\"GET\", \"HEAD\"，\"POST\"，\"PUT\"。\n            </td>\n        </tr>\n        <tr>\n            <td>$_SERVER['QUERY_STRING']</td>\n            <td>\n                query string（查询字符串），如果有的话，通过它进行页面访问。\n            </td>\n        </tr>\n        \n        <tr>\n            <td>$_SERVER['REQUEST_TIME']</td>\n            <td>请求开始时的时间戳。从 PHP 5.1.0 起可用。 (如：1377687496)</td>\n        </tr>\n\n        <tr>\n            <td>$_SERVER['SERVER_NAME']</td>\n            <td>\n                当前运行脚本所在的服务器的主机名。如果脚本运行于虚拟主机中，该名称是由那个虚拟主机所设置的值决定。\n            </td>\n        </tr>\n        <tr>\n            <td>$_SERVER['SERVER_SOFTWARE']</td>\n            <td>\n                服务器标识字符串，在响应请求时的头信息中给出。\n                (如：Apache/2.2.24)\n            </td>\n        </tr>\n        <tr>\n            <td>$_SERVER['HTTP_ACCEPT']</td>\n            <td>当前请求头中 Accept: 项的内容，如果存在的话。</td>\n        </tr>\n        <tr>\n            <td>$_SERVER['HTTP_ACCEPT_CHARSET']</td>\n            <td>\n                当前请求头中 Accept-Charset:\n                项的内容，如果存在的话。例如：\"iso-8859-1,*,utf-8\"。\n            </td>\n        </tr>\n        <tr>\n            <td>$_SERVER['HTTP_HOST']</td>\n            <td>当前请求头中 Host: 项的内容，如果存在的话。</td>\n        </tr>\n        <tr>\n            <td>$_SERVER['HTTP_REFERER']</td>\n            <td>\n                引导用户代理到当前页的前一页的地址（如果存在）。由 user agent\n                设置决定。并不是所有的用户代理都会设置该项，有的还提供了修改\n                HTTP_REFERER 的功能。简言之，该值并不可信。)\n            </td>\n        </tr>\n        <tr>\n            <td>$_SERVER['HTTPS']</td>\n            <td>如果脚本是通过 HTTPS 协议被访问，则被设为一个非空的值。</td>\n        </tr>\n        <tr>\n            <td>$_SERVER['REMOTE_ADDR']</td>\n            <td>浏览当前页面的用户的 IP 地址。</td>\n        </tr>\n        <tr>\n            <td>$_SERVER['REMOTE_HOST']</td>\n            <td>\n                浏览当前页面的用户的主机名。DNS 反向解析不依赖于用户的\n                REMOTE_ADDR。\n            </td>\n        </tr>\n        <tr>\n            <td>$_SERVER['REMOTE_PORT']</td>\n            <td>用户机器上连接到 Web 服务器所使用的端口号。</td>\n        </tr>\n        <tr>\n            <td>$_SERVER['SCRIPT_FILENAME']</td>\n            <td>当前执行脚本的绝对路径。</td>\n        </tr>\n        <tr>\n            <td>$_SERVER['SERVER_PORT']</td>\n            <td>\n                Web 服务器使用的端口。默认值为 \"80\"。如果使用 SSL\n                安全连接，则这个值为用户设置的 HTTP 端口。\n            </td>\n        </tr>\n        <tr>\n            <td>$_SERVER['SERVER_ADMIN']</td>\n            <td>\n                该值指明了 Apache 服务器配置文件中的 SERVER_ADMIN\n                参数。如果脚本运行在一个虚拟主机上，则该值是那个虚拟主机的值。(如：someone@runoob.com)\n            </td>\n        </tr>\n        <tr>\n            <td>$_SERVER['SERVER_SIGNATURE']</td>\n            <td>包含了服务器版本和虚拟主机名的字符串。</td>\n        </tr>\n        <tr>\n            <td>$_SERVER['PATH_TRANSLATED']</td>\n            <td>\n                当前脚本所在文件系统（非文档根目录）的基本路径。这是在服务器进行虚拟到真实路径的映像后的结果。\n            </td>\n        </tr>\n        <tr>\n            <td>$_SERVER['SCRIPT_NAME']</td>\n            <td>\n                包含当前脚本的路径。这在页面需要指向自己时非常有用。__FILE__\n                常量包含当前脚本(例如包含文件)的完整路径和文件名。\n            </td>\n        </tr>\n        <tr>\n            <td>$_SERVER['SCRIPT_URI']</td>\n            <td>URI 用来指定要访问的页面。例如 \"/index.html\"。</td>\n        </tr>\n    </tbody>\n</table>","reference":"参考资料|https://www.php.net/manual/zh/reserved.variables.php","dot":""},{"prefix":"","tag":"$_REQUEST","suffix":"[name]","desc":"用于收集HTML表单提交的数据\n默认情况下包含了 $_GET，$_POST 和 $_COOKIE 的数组","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"$_GET","suffix":"[name]","desc":"通过 URL 参数传递给当前脚本的变量的数组","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"$_POST","suffix":"[name]","desc":"当 HTTP POST 请求的 Content-Type 是 application/x-www-form-urlencoded 或 multipart/form-data 时，会将变量以关联数组形式传入当前脚本。","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"$_SESSION","suffix":"[name]","desc":"当前脚本可用 SESSION 变量的数组。","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"$_COOKIE","suffix":"[name]","desc":"通过 HTTP Cookies 方式传递给当前脚本的变量的数组。","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"$_FILES","suffix":"","desc":"通过 HTTP POST 方式上传到当前脚本的项目的数组。","url":"","summary":"","reference":"","dot":""}]}]},{"title":"其它","barcolor":"","fold":false,"box":[{"title":"安装与环境","fold":false,"list":[{"prefix":"","tag":"php -S localhost:8888","suffix":"","desc":"PHP内置Web Server","url":"http://php.net/manual/zh/features.commandline.webserver.php","summary":"","reference":"","dot":""}]}]}]},{"column":[{"title":"Title","barcolor":"","fold":false,"box":[{"title":"Sub Title","fold":false,"list":[{"prefix":"","tag":"echo ","suffix":"str,str..","desc":"可以输出一个或多个字符串, 没有返回值","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"print ","suffix":"str","desc":"只允许输出一个字符串，返回值总为 1","url":"","summary":"","reference":"","dot":""}]}]}]}]}