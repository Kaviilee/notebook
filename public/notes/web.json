{"version":1585052253987,"name":"web","data":[{"column":[{"title":"Web","barcolor":"","fold":false,"box":[{"title":"HTTP Headers","fold":false,"list":[{"prefix":"","tag":"请求方法","suffix":"","desc":"<table class=\"reference\">\n   <tbody><tr><th width=\"5%\">序号</th><th width=\"10%\">方法</th><th>描述</th></tr>\n   <tr><td>1</td><td>GET</td><td>请求指定的页面信息，并返回实体主体。</td></tr>\n   <tr><td>2</td><td>HEAD</td><td>类似于 GET 请求，只不过返回的响应中没有具体的内容，用于获取报头</td></tr>\n   <tr><td>3</td><td>POST</td><td>向指定资源提交数据进行处理请求（例如提交表单或者上传文件）。数据被包含在请求体中。POST 请求可能会导致新的资源的建立和/或已有资源的修改。</td></tr>\n   <tr><td>4</td><td>PUT</td><td>从客户端向服务器传送的数据取代指定的文档的内容。</td></tr>\n   <tr><td>5</td><td>DELETE</td><td>请求服务器删除指定的页面。</td></tr>\n   <tr><td>6</td><td>CONNECT</td><td>HTTP/1.1 协议中预留给能够将连接改为管道方式的代理服务器。</td></tr>\n   <tr><td>7</td><td>OPTIONS </td><td>允许客户端查看服务器的性能。</td></tr>\n   <tr><td>8</td><td>TRACE</td><td>回显服务器收到的请求，主要用于测试或诊断。</td></tr>\n   <tr><td>9</td><td>PATCH</td><td>是对 PUT 方法的补充，用来对已知资源进行局部更新 。</td></tr>\n   </tbody></table>","url":"","summary":"","reference":"参考资料|https://wiki.developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods","dot":""},{"prefix":"","tag":" 状态返回码","suffix":"","desc":"<table class=\"reference\"><caption>HTTP状态码列表</caption>\n   <tbody>\n   <tr>\n   <th>状态码</th>\n   <th>状态码英文名称</th>\n   <th>中文描述</th>\n   </tr>\n   <tr>\n   <td>100</td>\n   <td>Continue</td>\n   <td>继续客户端应继续其请求</td>\n   </tr>\n   <tr>\n   <td>101</td>\n   <td>Switching Protocols</td>\n   <td>切换协议。服务器根据客户端的请求切换协议。只能切换到更高级的协议，例如，切换到HTTP的新版本协议</td>\n   </tr>\n   <tr>\n   <td colspan=\"3\"></td>\n   </tr>\n   <tr>\n   <td>200</td>\n   <td>OK</td>\n   <td>请求成功。一般用于GET与POST请求</td>\n   </tr>\n   <tr>\n   <td>201</td>\n   <td>Created</td>\n   <td>已创建。成功请求并创建了新的资源</td>\n   </tr>\n   <tr>\n   <td>202</td>\n   <td>Accepted</td>\n   <td>已接受。已经接受请求，但未处理完成</td>\n   </tr>\n   <tr>\n   <td>203</td>\n   <td>Non-Authoritative Information</td>\n   <td>非授权信息。请求成功。但返回的meta信息不在原始的服务器，而是一个副本</td>\n   </tr>\n   <tr>\n   <td>204</td>\n   <td>No Content</td>\n   <td>无内容。服务器成功处理，但未返回内容。在未更新网页的情况下，可确保浏览器继续显示当前文档</td>\n   </tr>\n   <tr>\n   <td>205</td>\n   <td>Reset Content</td>\n   <td>重置内容。服务器处理成功，用户终端（例如：浏览器）应重置文档视图。可通过此返回码清除浏览器的表单域</td>\n   </tr>\n   <tr>\n   <td>206</td>\n   <td>Partial Content</td>\n   <td>部分内容。服务器成功处理了部分GET请求</td>\n   </tr>\n   <tr>\n   <td colspan=\"3\"></td>\n   </tr>\n   <tr>\n   <td>300</td>\n   <td>Multiple Choices</td>\n   <td>多种选择。请求的资源可包括多个位置，相应可返回一个资源特征与地址的列表用于用户终端（例如：浏览器）选择</td>\n   </tr>\n   <tr>\n   <td>301</td>\n   <td>Moved Permanently</td>\n   <td>永久移动。请求的资源已被永久的移动到新URI，返回信息会包括新的URI，浏览器会自动定向到新URI。今后任何新的请求都应使用新的URI代替</td>\n   </tr>\n   <tr>\n   <td>302</td>\n   <td>Found</td>\n   <td>临时移动。与301类似。但资源只是临时被移动。客户端应继续使用原有URI</td>\n   </tr>\n   <tr>\n   <td>303</td>\n   <td>See Other</td>\n   <td>查看其它地址。与301类似。使用GET和POST请求查看</td>\n   </tr>\n   <tr>\n   <td>304</td>\n   <td>Not Modified</td>\n   <td>未修改。所请求的资源未修改，服务器返回此状态码时，不会返回任何资源。客户端通常会缓存访问过的资源，通过提供一个头信息指出客户端希望只返回在指定日期之后修改的资源</td>\n   </tr>\n   <tr>\n   <td>305</td>\n   <td>Use Proxy</td>\n   <td>使用代理。所请求的资源必须通过代理访问</td>\n   </tr>\n   <tr>\n   <td>306</td>\n   <td>Unused</td>\n   <td>已经被废弃的HTTP状态码</td>\n   </tr>\n   <tr>\n   <td>307</td>\n   <td>Temporary Redirect</td>\n   <td>临时重定向。与302类似。使用GET请求重定向</td>\n   </tr>\n   <tr>\n   <td colspan=\"3\"></td>\n   </tr>\n   <tr>\n   <td>400</td>\n   <td>Bad Request</td>\n   <td>客户端请求的语法错误，服务器无法理解</td>\n   </tr>\n   <tr>\n   <td>401</td>\n   <td>Unauthorized</td>\n   <td>请求要求用户的身份认证</td>\n   </tr>\n   <tr>\n   <td>402</td>\n   <td>Payment Required</td>\n   <td>保留，将来使用</td>\n   </tr>\n   <tr>\n   <td>403</td>\n   <td>Forbidden</td>\n   <td>服务器理解请求客户端的请求，但是拒绝执行此请求</td>\n   </tr>\n   <tr>\n   <td>404</td>\n   <td>Not Found</td>\n   <td>服务器无法根据客户端的请求找到资源（网页）。通过此代码，网站设计人员可设置\"您所请求的资源无法找到\"的个性页面</td>\n   </tr>\n   <tr>\n   <td>405</td>\n   <td>Method Not Allowed</td>\n   <td>客户端请求中的方法被禁止</td>\n   </tr>\n   <tr>\n   <td>406</td>\n   <td>Not Acceptable</td>\n   <td>服务器无法根据客户端请求的内容特性完成请求</td>\n   </tr>\n   <tr>\n   <td>407</td>\n   <td>Proxy Authentication Required</td>\n   <td>请求要求代理的身份认证，与401类似，但请求者应当使用代理进行授权</td>\n   </tr>\n   <tr>\n   <td>408</td>\n   <td>Request Time-out</td>\n   <td>服务器等待客户端发送的请求时间过长，超时</td>\n   </tr>\n   <tr>\n   <td>409</td>\n   <td>Conflict</td>\n   <td>服务器完成客户端的 PUT 请求时可能返回此代码，服务器处理请求时发生了冲突</td>\n   </tr>\n   <tr>\n   <td>410</td>\n   <td>Gone</td>\n   <td>客户端请求的资源已经不存在。410不同于404，如果资源以前有现在被永久删除了可使用410代码，网站设计人员可通过301代码指定资源的新位置</td>\n   </tr>\n   <tr>\n   <td>411</td>\n   <td>Length Required</td>\n   <td>服务器无法处理客户端发送的不带Content-Length的请求信息</td>\n   </tr>\n   <tr>\n   <td>412</td>\n   <td>Precondition Failed</td>\n   <td>客户端请求信息的先决条件错误</td>\n   </tr>\n   <tr>\n   <td>413</td>\n   <td>Request Entity Too Large</td>\n   <td>由于请求的实体过大，服务器无法处理，因此拒绝请求。为防止客户端的连续请求，服务器可能会关闭连接。如果只是服务器暂时无法处理，则会包含一个Retry-After的响应信息</td>\n   </tr>\n   <tr>\n   <td>414</td>\n   <td>Request-URI Too Large</td>\n   <td>请求的URI过长（URI通常为网址），服务器无法处理</td>\n   </tr>\n   <tr>\n   <td>415</td>\n   <td>Unsupported Media Type</td>\n   <td>服务器无法处理请求附带的媒体格式</td>\n   </tr>\n   <tr>\n   <td>416</td>\n   <td>Requested range not satisfiable</td>\n   <td>客户端请求的范围无效</td>\n   </tr>\n   <tr>\n   <td>417</td>\n   <td>Expectation Failed</td>\n   <td>服务器无法满足Expect的请求头信息</td>\n   </tr>\n   <tr>\n   <td colspan=\"3\"></td>\n   </tr>\n   <tr>\n   <td>500</td>\n   <td>Internal Server Error</td>\n   <td>服务器内部错误，无法完成请求</td>\n   </tr>\n   <tr>\n   <td>501</td>\n   <td>Not Implemented</td>\n   <td>服务器不支持请求的功能，无法完成请求</td>\n   </tr>\n   <tr>\n   <td>502</td>\n   <td>Bad Gateway</td>\n   <td>作为网关或者代理工作的服务器尝试执行请求时，从远程服务器接收到了一个无效的响应</td>\n   </tr>\n   <tr>\n   <td>503</td>\n   <td>Service Unavailable</td>\n   <td>由于超载或系统维护，服务器暂时的无法处理客户端的请求。延时的长度可包含在服务器的Retry-After头信息中</td>\n   </tr>\n   <tr>\n   <td>504</td>\n   <td>Gateway Time-out</td>\n   <td>充当网关或代理的服务器，未及时从远端服务器获取请求</td>\n   </tr>\n   <tr>\n   <td>505</td>\n   <td>HTTP Version not supported</td>\n   <td>服务器不支持请求的HTTP协议的版本，无法完成处理</td>\n   </tr>\n   </tbody>\n   </table>","url":"","summary":"","reference":"参考资料|https://wiki.developer.mozilla.org/zh-CN/docs/Web/HTTP/Status","dot":""},{"prefix":"","tag":"通用首部字段","suffix":"","desc":"# 通用首部字段\n<table data-evernote-id=\"409\" class=\"js-evernote-checked\">\n<thead>\n<tr>\n<th align=\"center\" data-evernote-id=\"504\" class=\"js-evernote-checked\">首部字段名</th>\n<th align=\"center\" data-evernote-id=\"505\" class=\"js-evernote-checked\">说明</th>\n</tr>\n</thead>\n<tbody><tr data-evernote-id=\"1025\" class=\"js-evernote-checked\">\n<td align=\"center\" data-evernote-id=\"506\" class=\"js-evernote-checked\">Cache-Control</td>\n<td align=\"center\" data-evernote-id=\"507\" class=\"js-evernote-checked\">控制缓存的行为</td>\n</tr>\n<tr>\n<td align=\"center\" data-evernote-id=\"508\" class=\"js-evernote-checked\">Connection</td>\n<td align=\"center\" data-evernote-id=\"509\" class=\"js-evernote-checked\">逐挑首部、连接的管理</td>\n</tr>\n<tr data-evernote-id=\"1026\" class=\"js-evernote-checked\">\n<td align=\"center\" data-evernote-id=\"510\" class=\"js-evernote-checked\">Date</td>\n<td align=\"center\" data-evernote-id=\"511\" class=\"js-evernote-checked\">创建报文的日期时间</td>\n</tr>\n<tr>\n<td align=\"center\" data-evernote-id=\"512\" class=\"js-evernote-checked\">Pragma</td>\n<td align=\"center\" data-evernote-id=\"513\" class=\"js-evernote-checked\">报文指令</td>\n</tr>\n<tr data-evernote-id=\"1027\" class=\"js-evernote-checked\">\n<td align=\"center\" data-evernote-id=\"514\" class=\"js-evernote-checked\">Trailer</td>\n<td align=\"center\" data-evernote-id=\"515\" class=\"js-evernote-checked\">报文末端的首部一览</td>\n</tr>\n<tr>\n<td align=\"center\" data-evernote-id=\"516\" class=\"js-evernote-checked\">Transfer-Encoding</td>\n<td align=\"center\" data-evernote-id=\"517\" class=\"js-evernote-checked\">指定报文主体的传输编码方式</td>\n</tr>\n<tr data-evernote-id=\"1028\" class=\"js-evernote-checked\">\n<td align=\"center\" data-evernote-id=\"518\" class=\"js-evernote-checked\">Upgrade</td>\n<td align=\"center\" data-evernote-id=\"519\" class=\"js-evernote-checked\">升级为其他协议</td>\n</tr>\n<tr>\n<td align=\"center\" data-evernote-id=\"520\" class=\"js-evernote-checked\">Via</td>\n<td align=\"center\" data-evernote-id=\"521\" class=\"js-evernote-checked\">代理服务器的相关信息</td>\n</tr>\n<tr data-evernote-id=\"1029\" class=\"js-evernote-checked\">\n<td align=\"center\" data-evernote-id=\"522\" class=\"js-evernote-checked\">Warning</td>\n<td align=\"center\" data-evernote-id=\"523\" class=\"js-evernote-checked\">错误通知</td>\n</tr>\n</tbody></table>","url":"","summary":"","reference":"MDN|https://wiki.developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers\n常用字段|https://andrewpqc.github.io/2018/07/15/http2/","dot":""},{"prefix":"","tag":"请求首部字段","suffix":"","desc":"# 请求首部字段\n<table data-evernote-id=\"436\" class=\"js-evernote-checked\">\n<thead>\n<tr>\n<th align=\"center\" data-evernote-id=\"657\" class=\"js-evernote-checked\">首部字段名</th>\n<th align=\"center\" data-evernote-id=\"658\" class=\"js-evernote-checked\">说明</th>\n</tr>\n</thead>\n<tbody><tr data-evernote-id=\"1067\" class=\"js-evernote-checked\">\n<td align=\"center\" data-evernote-id=\"659\" class=\"js-evernote-checked\">Accept</td>\n<td align=\"center\" data-evernote-id=\"660\" class=\"js-evernote-checked\">用户代理可处理的媒体类型</td>\n</tr>\n<tr>\n<td align=\"center\" data-evernote-id=\"661\" class=\"js-evernote-checked\">Accept-Charset</td>\n<td align=\"center\" data-evernote-id=\"662\" class=\"js-evernote-checked\">优先的字符集</td>\n</tr>\n<tr data-evernote-id=\"1068\" class=\"js-evernote-checked\">\n<td align=\"center\" data-evernote-id=\"663\" class=\"js-evernote-checked\">Accept-Encoding</td>\n<td align=\"center\" data-evernote-id=\"664\" class=\"js-evernote-checked\">优先的内容编码</td>\n</tr>\n<tr>\n<td align=\"center\" data-evernote-id=\"665\" class=\"js-evernote-checked\">Accept-Language</td>\n<td align=\"center\" data-evernote-id=\"666\" class=\"js-evernote-checked\">优先的语言（自然语言）</td>\n</tr>\n<tr data-evernote-id=\"1069\" class=\"js-evernote-checked\">\n<td align=\"center\" data-evernote-id=\"667\" class=\"js-evernote-checked\">Authorization</td>\n<td align=\"center\" data-evernote-id=\"668\" class=\"js-evernote-checked\">Web认证信息</td>\n</tr>\n<tr>\n<td align=\"center\" data-evernote-id=\"669\" class=\"js-evernote-checked\">Expect</td>\n<td align=\"center\" data-evernote-id=\"670\" class=\"js-evernote-checked\">期待服务器的特定行为</td>\n</tr>\n<tr data-evernote-id=\"1070\" class=\"js-evernote-checked\">\n<td align=\"center\" data-evernote-id=\"671\" class=\"js-evernote-checked\">From</td>\n<td align=\"center\" data-evernote-id=\"672\" class=\"js-evernote-checked\">用户的电子邮箱地址</td>\n</tr>\n<tr>\n<td align=\"center\" data-evernote-id=\"673\" class=\"js-evernote-checked\">Host</td>\n<td align=\"center\" data-evernote-id=\"674\" class=\"js-evernote-checked\">请求资源所在服务器</td>\n</tr>\n<tr data-evernote-id=\"1071\" class=\"js-evernote-checked\">\n<td align=\"center\" data-evernote-id=\"675\" class=\"js-evernote-checked\">If-Match</td>\n<td align=\"center\" data-evernote-id=\"676\" class=\"js-evernote-checked\">比较实体标记（ETag）</td>\n</tr>\n<tr>\n<td align=\"center\" data-evernote-id=\"677\" class=\"js-evernote-checked\">If-Modified-Since</td>\n<td align=\"center\" data-evernote-id=\"678\" class=\"js-evernote-checked\">比较资源的更新时间</td>\n</tr>\n<tr data-evernote-id=\"1072\" class=\"js-evernote-checked\">\n<td align=\"center\" data-evernote-id=\"679\" class=\"js-evernote-checked\">If-None-Match</td>\n<td align=\"center\" data-evernote-id=\"680\" class=\"js-evernote-checked\">比较实体标记（与 If-Macth 相反）</td>\n</tr>\n<tr>\n<td align=\"center\" data-evernote-id=\"681\" class=\"js-evernote-checked\">If-Range</td>\n<td align=\"center\" data-evernote-id=\"682\" class=\"js-evernote-checked\">资源未更新时发送实体 Byte 的范围请求</td>\n</tr>\n<tr data-evernote-id=\"1073\" class=\"js-evernote-checked\">\n<td align=\"center\" data-evernote-id=\"683\" class=\"js-evernote-checked\">If-Unmodified-Since</td>\n<td align=\"center\" data-evernote-id=\"684\" class=\"js-evernote-checked\">比较资源的更新时间(与 If-Modified-Since 相反)</td>\n</tr>\n<tr>\n<td align=\"center\" data-evernote-id=\"685\" class=\"js-evernote-checked\">Max-Forwards</td>\n<td align=\"center\" data-evernote-id=\"686\" class=\"js-evernote-checked\">最大传输逐跳数</td>\n</tr>\n<tr data-evernote-id=\"1074\" class=\"js-evernote-checked\">\n<td align=\"center\" data-evernote-id=\"687\" class=\"js-evernote-checked\">Proxy-Authorization</td>\n<td align=\"center\" data-evernote-id=\"688\" class=\"js-evernote-checked\">代理服务器要求客户端的认证信息</td>\n</tr>\n<tr>\n<td align=\"center\" data-evernote-id=\"689\" class=\"js-evernote-checked\">Range</td>\n<td align=\"center\" data-evernote-id=\"690\" class=\"js-evernote-checked\">实体的字节范围请求</td>\n</tr>\n<tr data-evernote-id=\"1075\" class=\"js-evernote-checked\">\n<td align=\"center\" data-evernote-id=\"691\" class=\"js-evernote-checked\">Referer</td>\n<td align=\"center\" data-evernote-id=\"692\" class=\"js-evernote-checked\">对请求中 URI 的原始获取方</td>\n</tr>\n<tr>\n<td align=\"center\" data-evernote-id=\"693\" class=\"js-evernote-checked\">TE</td>\n<td align=\"center\" data-evernote-id=\"694\" class=\"js-evernote-checked\">传输编码的优先级</td>\n</tr>\n<tr data-evernote-id=\"1076\" class=\"js-evernote-checked\">\n<td align=\"center\" data-evernote-id=\"695\" class=\"js-evernote-checked\">User-Agent</td>\n<td align=\"center\" data-evernote-id=\"696\" class=\"js-evernote-checked\">HTTP 客户端程序的信息</td>\n</tr>\n</tbody></table>","url":"","summary":"","reference":"","dot":"","title":"请求"},{"prefix":"","tag":"响应首部字段","suffix":"","desc":"# 响应首部字段\n<table data-evernote-id=\"456\" class=\"js-evernote-checked\">\n   <thead>\n   <tr>\n   <th align=\"center\" data-evernote-id=\"739\" class=\"js-evernote-checked\">首部字段名</th>\n   <th align=\"center\" data-evernote-id=\"740\" class=\"js-evernote-checked\">说明</th>\n   </tr>\n   </thead>\n   <tbody><tr data-evernote-id=\"1097\" class=\"js-evernote-checked\">\n   <td align=\"center\" data-evernote-id=\"741\" class=\"js-evernote-checked\">Accept-Ranges</td>\n   <td align=\"center\" data-evernote-id=\"742\" class=\"js-evernote-checked\">是否接受字节范围请求</td>\n   </tr>\n   <tr>\n   <td align=\"center\" data-evernote-id=\"743\" class=\"js-evernote-checked\">Age</td>\n   <td align=\"center\" data-evernote-id=\"744\" class=\"js-evernote-checked\">推算资源创建经过时间</td>\n   </tr>\n   <tr data-evernote-id=\"1098\" class=\"js-evernote-checked\">\n   <td align=\"center\" data-evernote-id=\"745\" class=\"js-evernote-checked\">ETag</td>\n   <td align=\"center\" data-evernote-id=\"746\" class=\"js-evernote-checked\">资源的匹配信息</td>\n   </tr>\n   <tr>\n   <td align=\"center\" data-evernote-id=\"747\" class=\"js-evernote-checked\">Location</td>\n   <td align=\"center\" data-evernote-id=\"748\" class=\"js-evernote-checked\">令客户端重定向至指定 URI</td>\n   </tr>\n   <tr data-evernote-id=\"1099\" class=\"js-evernote-checked\">\n   <td align=\"center\" data-evernote-id=\"749\" class=\"js-evernote-checked\">Proxy-Authenticate</td>\n   <td align=\"center\" data-evernote-id=\"750\" class=\"js-evernote-checked\">代理服务器对客户端的认证信息</td>\n   </tr>\n   <tr>\n   <td align=\"center\" data-evernote-id=\"751\" class=\"js-evernote-checked\">Retry-After</td>\n   <td align=\"center\" data-evernote-id=\"752\" class=\"js-evernote-checked\">对再次发起请求的时机要求</td>\n   </tr>\n   <tr data-evernote-id=\"1100\" class=\"js-evernote-checked\">\n   <td align=\"center\" data-evernote-id=\"753\" class=\"js-evernote-checked\">Server</td>\n   <td align=\"center\" data-evernote-id=\"754\" class=\"js-evernote-checked\">HTTP 服务器的安装信息</td>\n   </tr>\n   <tr>\n   <td align=\"center\" data-evernote-id=\"755\" class=\"js-evernote-checked\">Vary</td>\n   <td align=\"center\" data-evernote-id=\"756\" class=\"js-evernote-checked\">代理服务器缓存的管理信息</td>\n   </tr>\n   <tr data-evernote-id=\"1101\" class=\"js-evernote-checked\">\n   <td align=\"center\" data-evernote-id=\"757\" class=\"js-evernote-checked\">WWW-Authenticate</td>\n   <td align=\"center\" data-evernote-id=\"758\" class=\"js-evernote-checked\">服务器对客户端的认证信息</td>\n   </tr>\n   </tbody></table>","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"实体首部字段","suffix":"","desc":"# 实体首部字段\n<table data-evernote-id=\"466\" class=\"js-evernote-checked\">\n   <thead>\n   <tr>\n   <th align=\"center\" data-evernote-id=\"781\" class=\"js-evernote-checked\">首部字段名</th>\n   <th align=\"center\" data-evernote-id=\"782\" class=\"js-evernote-checked\">说明</th>\n   </tr>\n   </thead>\n   <tbody><tr data-evernote-id=\"1112\" class=\"js-evernote-checked\">\n   <td align=\"center\" data-evernote-id=\"783\" class=\"js-evernote-checked\">Allow</td>\n   <td align=\"center\" data-evernote-id=\"784\" class=\"js-evernote-checked\">资源可支持的 HTTP 方法</td>\n   </tr>\n   <tr>\n   <td align=\"center\" data-evernote-id=\"785\" class=\"js-evernote-checked\">Content-Encoding</td>\n   <td align=\"center\" data-evernote-id=\"786\" class=\"js-evernote-checked\">实体主体适用的编码方式</td>\n   </tr>\n   <tr data-evernote-id=\"1113\" class=\"js-evernote-checked\">\n   <td align=\"center\" data-evernote-id=\"787\" class=\"js-evernote-checked\">Content-Language</td>\n   <td align=\"center\" data-evernote-id=\"788\" class=\"js-evernote-checked\">实体主体的自然语言</td>\n   </tr>\n   <tr>\n   <td align=\"center\" data-evernote-id=\"789\" class=\"js-evernote-checked\">Content-Length</td>\n   <td align=\"center\" data-evernote-id=\"790\" class=\"js-evernote-checked\">实体主体的大小（单位：字节）</td>\n   </tr>\n   <tr data-evernote-id=\"1114\" class=\"js-evernote-checked\">\n   <td align=\"center\" data-evernote-id=\"791\" class=\"js-evernote-checked\">Content-Location</td>\n   <td align=\"center\" data-evernote-id=\"792\" class=\"js-evernote-checked\">替代对应资源的 URI</td>\n   </tr>\n   <tr>\n   <td align=\"center\" data-evernote-id=\"793\" class=\"js-evernote-checked\">Content-MD5</td>\n   <td align=\"center\" data-evernote-id=\"794\" class=\"js-evernote-checked\">实体主体的报文摘要</td>\n   </tr>\n   <tr data-evernote-id=\"1115\" class=\"js-evernote-checked\">\n   <td align=\"center\" data-evernote-id=\"795\" class=\"js-evernote-checked\">Content-Range</td>\n   <td align=\"center\" data-evernote-id=\"796\" class=\"js-evernote-checked\">实体主体的位置范围</td>\n   </tr>\n   <tr>\n   <td align=\"center\" data-evernote-id=\"797\" class=\"js-evernote-checked\">Content-Type</td>\n   <td align=\"center\" data-evernote-id=\"798\" class=\"js-evernote-checked\">实体主体的媒体类型</td>\n   </tr>\n   <tr data-evernote-id=\"1116\" class=\"js-evernote-checked\">\n   <td align=\"center\" data-evernote-id=\"799\" class=\"js-evernote-checked\">Expires</td>\n   <td align=\"center\" data-evernote-id=\"800\" class=\"js-evernote-checked\">实体主体过期的日期时间</td>\n   </tr>\n   <tr>\n   <td align=\"center\" data-evernote-id=\"801\" class=\"js-evernote-checked\">Last-Modified</td>\n   <td align=\"center\" data-evernote-id=\"802\" class=\"js-evernote-checked\">资源的最后修改日期时间</td>\n   </tr>\n   </tbody></table>","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"其它首部字段","suffix":"","desc":"# 其他首部字段\n+ X-Frame-Options `X-Frame-Options: DENY`\n    + DENY：拒绝\n    + SAMEORIGIN：仅同源域名下的页面（Top-level-browsing-context）匹配时许可。\n\n首部字段 X-Frame-Options 属于 HTTP 响应首部，用于控制网站内容在其他 Web 网站的 Frame 标签内的显示问题。其主要目的是为了防止点击劫持（clickjacking）攻击。\n\n----\n+ X-XSS-Protection `X-XSS-Protection: 1`\n    + 0 ：将 XSS 过滤设置成无效状态\n    + 1 ：将 XSS 过滤设置成有效状态\n\n首部字段 X-XSS-Protection 属于 HTTP 响应首部，它是针对跨站脚本攻击（XSS）的一种对策，用于控制浏览器 XSS 防护机制的开关。\n\n----","url":"","summary":"","reference":"","dot":""}]},{"title":"Content-Type","fold":false,"list":[{"prefix":"","tag":"application/x-www-form-urlencoded","suffix":"","desc":"1. 浏览器的原生<form> 表单，如果不设置 enctype 属性，那么最终就会此方式提交数据\n2. 提交的数据按照 `key1=val1&key2=val2` 的方式进行编码，key和val都进行了 URL 转码\n3. `jQuery` 和 QWrap 的 Ajax，Content-Type 默认值都是「application/x-www-form-urlencoded;charset=utf-8」。","url":"","summary":"```\nPOST http://www.example.com HTTP/1.1\nContent-Type: application/x-www-form-urlencoded;charset=utf-8\n\ntitle=test&sub%5B%5D=1&sub%5B%5D=2&sub%5B%5D=3\n```","reference":"","dot":""},{"prefix":"","tag":"multipart/form-data","suffix":"","desc":"我们使用表单上传文件时，必须让 <form> 表单的 enctype 等于 multipart/form-data\n现阶段标准中原生 <form> 表单也只支持这两种方式","url":"","summary":"```\nPOST http://www.example.com HTTP/1.1\nContent-Type:multipart/form-data; boundary=----WebKitFormBoundaryrGKCBY7qhFd3TrwA\n\n------WebKitFormBoundaryrGKCBY7qhFd3TrwA\nContent-Disposition: form-data; name=\"text\"\n\ntitle\n------WebKitFormBoundaryrGKCBY7qhFd3TrwA\nContent-Disposition: form-data; name=\"file\"; filename=\"chrome.png\"\nContent-Type: image/png\n\nPNG ... content of chrome.png ...\n------WebKitFormBoundaryrGKCBY7qhFd3TrwA--\n```\n\n1. 首先生成了一个 boundary 用于分割不同的字段，为了避免与正文内容重复，boundary 很长很复杂。\n2. 以 --boundary 开始，紧接着是内容描述信息，然后是回车，最后是字段具体内容（文本或二进制）。如果传输的是文件，还要包含文件名和文件类型信息。消息主体最后以 --boundary-- 标示结束。关于 multipart/form-data 的详细定义，请前往 [rfc1867](https://www.ietf.org/rfc/rfc1867.txt) 查看。","reference":"","dot":""},{"prefix":"","tag":"application/json","suffix":"","desc":"rest主流\nphp 就无法通过 $_POST 对象从上面的请求中获得内容","url":"","summary":"```\nPOST http://www.example.com HTTP/1.1 \nContent-Type: application/json;charset=utf-8\n\n{\"title\":\"test\",\"sub\":[1,2,3]}\n```","reference":"参考资料|https://imququ.com/post/four-ways-to-post-data-in-http.html","dot":""},{"prefix":"","tag":"MIME类型","suffix":"","desc":"<table class=\"reference\"> \n\t<tbody><tr>\n       <th>文件扩展名</th>\n       <th>Content-Type(Mime-Type)</th>\n       <th>文件扩展名</th>\n       <th>Content-Type(Mime-Type)</th>\n     </tr>\n     </tbody><tbody>\n\t\t<tr>\n    \t\t<td>.*（ 二进制流，不知道下载文件类型）</td>\n    \t\t<td>application/octet-stream</td>\n\t\t\t<td>.tif</td>\n\t\t\t<td>image/tiff</td> \n    \t</tr>\n      <tr>\n       <td>.001</td>\n       <td>application/x-001</td> \n       <td>.301</td>\n       <td>application/x-301</td>\n      </tr> \n      <tr>\n       <td>.323</td>\n       <td>text/h323</td> \n \n       <td>.906</td>\n       <td>application/x-906</td>\n      </tr> \n      <tr>\n       <td>.907</td>\n       <td>drawing/907</td> \n   \n       <td>.a11</td>\n       <td>application/x-a11</td>\n      </tr> \n      <tr>\n       <td>.acp</td>\n       <td>audio/x-mei-aac</td> \n     \n       <td>.ai</td>\n       <td>application/postscript</td>\n      </tr> \n      <tr>\n       <td>.aif</td>\n       <td>audio/aiff</td> \n      \n       <td>.aifc</td>\n       <td>audio/aiff</td>\n      </tr> \n      <tr>\n       <td>.aiff</td>\n       <td>audio/aiff</td> \n     \n       <td>.anv</td>\n       <td>application/x-anv</td>\n      </tr> \n      <tr>\n       <td>.asa</td>\n       <td>text/asa</td> \n    \n       <td>.asf</td>\n       <td>video/x-ms-asf</td>\n      </tr> \n      <tr>\n       <td>.asp</td>\n       <td>text/asp</td> \n    \n       <td>.asx</td>\n       <td>video/x-ms-asf</td>\n      </tr> \n      <tr>\n       <td>.au</td>\n       <td>audio/basic</td> \n     \n       <td>.avi</td>\n       <td>video/avi</td>\n      </tr> \n      <tr>\n       <td>.awf</td>\n       <td>application/vnd.adobe.workflow</td> \n   \n       <td>.biz</td>\n       <td>text/xml</td>\n      </tr> \n      <tr>\n       <td>.bmp</td>\n       <td>application/x-bmp</td> \n      \n       <td>.bot</td>\n       <td>application/x-bot</td>\n      </tr> \n      <tr>\n       <td>.c4t</td>\n       <td>application/x-c4t</td> \n      \n       <td>.c90</td>\n       <td>application/x-c90</td>\n      </tr> \n      <tr>\n       <td>.cal</td>\n       <td>application/x-cals</td> \n      \n       <td>.cat</td>\n       <td>application/vnd.ms-pki.seccat</td>\n      </tr> \n      <tr>\n       <td>.cdf</td>\n       <td>application/x-netcdf</td> \n     \n       <td>.cdr</td>\n       <td>application/x-cdr</td>\n      </tr> \n      <tr>\n       <td>.cel</td>\n       <td>application/x-cel</td> \n      \n       <td>.cer</td>\n       <td>application/x-x509-ca-cert</td>\n      </tr> \n      <tr>\n       <td>.cg4</td>\n       <td>application/x-g4</td> \n      \n       <td>.cgm</td>\n       <td>application/x-cgm</td>\n      </tr> \n      <tr>\n       <td>.cit</td>\n       <td>application/x-cit</td> \n     \n       <td>.class</td>\n       <td>java/*</td>\n      </tr> \n      <tr>\n       <td>.cml</td>\n       <td>text/xml</td> \n      \n       <td>.cmp</td>\n       <td>application/x-cmp</td>\n      </tr> \n      <tr>\n       <td>.cmx</td>\n       <td>application/x-cmx</td> \n    \n       <td>.cot</td>\n       <td>application/x-cot</td>\n      </tr> \n      <tr>\n       <td>.crl</td>\n       <td>application/pkix-crl</td> \n     \n       <td>.crt</td>\n       <td>application/x-x509-ca-cert</td>\n      </tr> \n      <tr>\n       <td>.csi</td>\n       <td>application/x-csi</td> \n      \n       <td>.css</td>\n       <td>text/css</td>\n      </tr> \n      <tr>\n       <td>.cut</td>\n       <td>application/x-cut</td> \n      \n       <td>.dbf</td>\n       <td>application/x-dbf</td>\n      </tr> \n      <tr>\n       <td>.dbm</td>\n       <td>application/x-dbm</td> \n      \n       <td>.dbx</td>\n       <td>application/x-dbx</td>\n      </tr> \n      <tr>\n       <td>.dcd</td>\n       <td>text/xml</td> \n      \n       <td>.dcx</td>\n       <td>application/x-dcx</td>\n      </tr> \n      <tr>\n       <td>.der</td>\n       <td>application/x-x509-ca-cert</td> \n      \n       <td>.dgn</td>\n       <td>application/x-dgn</td>\n      </tr> \n      <tr>\n       <td>.dib</td>\n       <td>application/x-dib</td> \n   \n       <td>.dll</td>\n       <td>application/x-msdownload</td>\n      </tr> \n      <tr>\n       <td>.doc</td>\n       <td>application/msword</td> \n     \n       <td>.dot</td>\n       <td>application/msword</td>\n      </tr> \n      <tr>\n       <td>.drw</td>\n       <td>application/x-drw</td> \n     \n       <td>.dtd</td>\n       <td>text/xml</td>\n      </tr> \n      <tr>\n       <td>.dwf</td>\n       <td>Model/vnd.dwf</td> \n     \n       <td>.dwf</td>\n       <td>application/x-dwf</td>\n      </tr> \n      <tr>\n       <td>.dwg</td>\n       <td>application/x-dwg</td> \n      \n       <td>.dxb</td>\n       <td>application/x-dxb</td>\n      </tr> \n      <tr>\n       <td>.dxf</td>\n       <td>application/x-dxf</td> \n      \n       <td>.edn</td>\n       <td>application/vnd.adobe.edn</td>\n      </tr> \n      <tr>\n       <td>.emf</td>\n       <td>application/x-emf</td> \n     \n       <td>.eml</td>\n       <td>message/rfc822</td>\n      </tr> \n      <tr>\n       <td>.ent</td>\n       <td>text/xml</td> \n      \n       <td>.epi</td>\n       <td>application/x-epi</td>\n      </tr> \n      <tr>\n       <td>.eps</td>\n       <td>application/x-ps</td> \n     \n       <td>.eps</td>\n       <td>application/postscript</td>\n      </tr> \n      <tr>\n       <td>.etd</td>\n       <td>application/x-ebx</td> \n     \n       <td>.exe</td>\n       <td>application/x-msdownload</td>\n      </tr> \n      <tr>\n       <td>.fax</td>\n       <td>image/fax</td> \n      \n       <td>.fdf</td>\n       <td>application/vnd.fdf</td>\n      </tr> \n      <tr>\n       <td>.fif</td>\n       <td>application/fractals</td> \n      \n       <td>.fo</td>\n       <td>text/xml</td>\n      </tr> \n      <tr>\n       <td>.frm</td>\n       <td>application/x-frm</td> \n      \n       <td>.g4</td>\n       <td>application/x-g4</td>\n      </tr> \n      <tr>\n       <td>.gbr</td>\n       <td>application/x-gbr</td> \n     \n       <td>.</td>\n       <td>application/x-</td>\n      </tr> \n      <tr>\n       <td>.gif</td>\n       <td>image/gif</td> \n      \n       <td>.gl2</td>\n       <td>application/x-gl2</td>\n      </tr> \n      <tr>\n       <td>.gp4</td>\n       <td>application/x-gp4</td> \n      \n       <td>.hgl</td>\n       <td>application/x-hgl</td>\n      </tr> \n      <tr>\n       <td>.hmr</td>\n       <td>application/x-hmr</td> \n     \n       <td>.hpg</td>\n       <td>application/x-hpgl</td>\n      </tr> \n      <tr>\n       <td>.hpl</td>\n       <td>application/x-hpl</td> \n     \n       <td>.hqx</td>\n       <td>application/mac-binhex40</td>\n      </tr> \n      <tr>\n       <td>.hrf</td>\n       <td>application/x-hrf</td> \n      \n       <td>.hta</td>\n       <td>application/hta</td>\n      </tr> \n      <tr>\n       <td>.htc</td>\n       <td>text/x-component</td> \n      \n       <td>.htm</td>\n       <td>text/html</td>\n      </tr> \n      <tr>\n       <td>.html</td>\n       <td>text/html</td> \n      \n       <td>.htt</td>\n       <td>text/webviewhtml</td>\n      </tr> \n      <tr>\n       <td>.htx</td>\n       <td>text/html</td> \n      \n       <td>.icb</td>\n       <td>application/x-icb</td>\n      </tr> \n      <tr>\n       <td>.ico</td>\n       <td>image/x-icon</td> \n     \n       <td>.ico</td>\n       <td>application/x-ico</td>\n      </tr> \n      <tr>\n       <td>.iff</td>\n       <td>application/x-iff</td> \n      \n       <td>.ig4</td>\n       <td>application/x-g4</td>\n      </tr> \n      <tr>\n       <td>.igs</td>\n       <td>application/x-igs</td> \n      \n       <td>.iii</td>\n       <td>application/x-iphone</td>\n      </tr> \n      <tr>\n       <td>.img</td>\n       <td>application/x-img</td> \n      \n       <td>.ins</td>\n       <td>application/x-internet-signup</td>\n      </tr> \n      <tr>\n       <td>.isp</td>\n       <td>application/x-internet-signup</td> \n      \n       <td>.IVF</td>\n       <td>video/x-ivf</td>\n      </tr> \n      <tr>\n       <td>.java</td>\n       <td>java/*</td> \n      \n       <td>.jfif</td>\n       <td>image/jpeg</td>\n      </tr> \n      <tr>\n       <td>.jpe</td>\n       <td>image/jpeg</td> \n      \n       <td>.jpe</td>\n       <td>application/x-jpe</td>\n      </tr> \n      <tr>\n       <td>.jpeg</td>\n       <td>image/jpeg</td> \n      \n       <td>.jpg</td>\n       <td>image/jpeg</td>\n      </tr> \n      <tr>\n       <td>.jpg</td>\n       <td>application/x-jpg</td> \n      \n       <td>.js</td>\n       <td>application/x-javascript</td>\n      </tr> \n      <tr>\n       <td>.jsp</td>\n       <td>text/html</td> \n      \n       <td>.la1</td>\n       <td>audio/x-liquid-file</td>\n      </tr> \n      <tr>\n       <td>.lar</td>\n       <td>application/x-laplayer-reg</td> \n     \n       <td>.latex</td>\n       <td>application/x-latex</td>\n      </tr> \n      <tr>\n       <td>.lavs</td>\n       <td>audio/x-liquid-secure</td> \n   \n       <td>.lbm</td>\n       <td>application/x-lbm</td>\n      </tr> \n      <tr>\n       <td>.lmsff</td>\n       <td>audio/x-la-lms</td> \n      \n       <td>.ls</td>\n       <td>application/x-javascript</td>\n      </tr> \n      <tr>\n       <td>.ltr</td>\n       <td>application/x-ltr</td> \n     \n       <td>.m1v</td>\n       <td>video/x-mpeg</td>\n      </tr> \n      <tr>\n       <td>.m2v</td>\n       <td>video/x-mpeg</td> \n      \n       <td>.m3u</td>\n       <td>audio/mpegurl</td>\n      </tr> \n      <tr>\n       <td>.m4e</td>\n       <td>video/mpeg4</td> \n     \n       <td>.mac</td>\n       <td>application/x-mac</td>\n      </tr> \n      <tr>\n       <td>.man</td>\n       <td>application/x-troff-man</td> \n     \n       <td>.math</td>\n       <td>text/xml</td>\n      </tr> \n      <tr>\n       <td>.mdb</td>\n       <td>application/msaccess</td> \n      \n       <td>.mdb</td>\n       <td>application/x-mdb</td>\n      </tr> \n      <tr>\n       <td>.mfp</td>\n       <td>application/x-shockwave-flash</td> \n     \n       <td>.mht</td>\n       <td>message/rfc822</td>\n      </tr> \n      <tr>\n       <td>.mhtml</td>\n       <td>message/rfc822</td> \n      \n       <td>.mi</td>\n       <td>application/x-mi</td>\n      </tr> \n      <tr>\n       <td>.mid</td>\n       <td>audio/mid</td> \n      \n       <td>.midi</td>\n       <td>audio/mid</td>\n      </tr> \n      <tr>\n       <td>.mil</td>\n       <td>application/x-mil</td> \n    \n       <td>.mml</td>\n       <td>text/xml</td>\n      </tr> \n      <tr>\n       <td>.mnd</td>\n       <td>audio/x-musicnet-download</td> \n      \n       <td>.mns</td>\n       <td>audio/x-musicnet-stream</td>\n      </tr> \n      <tr>\n       <td>.mocha</td>\n       <td>application/x-javascript</td> \n     \n       <td>.movie</td>\n       <td>video/x-sgi-movie</td>\n      </tr> \n      <tr>\n       <td>.mp1</td>\n       <td>audio/mp1</td> \n     \n       <td>.mp2</td>\n       <td>audio/mp2</td>\n      </tr> \n      <tr>\n       <td>.mp2v</td>\n       <td>video/mpeg</td> \n      \n       <td>.mp3</td>\n       <td>audio/mp3</td>\n      </tr> \n      <tr>\n       <td>.mp4</td>\n       <td>video/mpeg4</td> \n     \n       <td>.mpa</td>\n       <td>video/x-mpg</td>\n      </tr> \n      <tr>\n       <td>.mpd</td>\n       <td>application/vnd.ms-project</td> \n      \n       <td>.mpe</td>\n       <td>video/x-mpeg</td>\n      </tr> \n      <tr>\n       <td>.mpeg</td>\n       <td>video/mpg</td> \n      \n       <td>.mpg</td>\n       <td>video/mpg</td>\n      </tr> \n      <tr>\n       <td>.mpga</td>\n       <td>audio/rn-mpeg</td> \n      \n       <td>.mpp</td>\n       <td>application/vnd.ms-project</td>\n      </tr> \n      <tr>\n       <td>.mps</td>\n       <td>video/x-mpeg</td> \n      \n       <td>.mpt</td>\n       <td>application/vnd.ms-project</td>\n      </tr> \n      <tr>\n       <td>.mpv</td>\n       <td>video/mpg</td> \n     \n       <td>.mpv2</td>\n       <td>video/mpeg</td>\n      </tr> \n      <tr>\n       <td>.mpw</td>\n       <td>application/vnd.ms-project</td> \n      \n       <td>.mpx</td>\n       <td>application/vnd.ms-project</td>\n      </tr> \n      <tr>\n       <td>.mtx</td>\n       <td>text/xml</td> \n    \n       <td>.mxp</td>\n       <td>application/x-mmxp</td>\n      </tr> \n      <tr>\n       <td>.net</td>\n       <td>image/pnetvue</td> \n      \n       <td>.nrf</td>\n       <td>application/x-nrf</td>\n      </tr> \n      <tr>\n       <td>.nws</td>\n       <td>message/rfc822</td> \n      \n       <td>.odc</td>\n       <td>text/x-ms-odc</td>\n      </tr> \n      <tr>\n       <td>.out</td>\n       <td>application/x-out</td> \n      \n       <td>.p10</td>\n       <td>application/pkcs10</td>\n      </tr> \n      <tr>\n       <td>.p12</td>\n       <td>application/x-pkcs12</td> \n     \n       <td>.p7b</td>\n       <td>application/x-pkcs7-certificates</td>\n      </tr> \n      <tr>\n       <td>.p7c</td>\n       <td>application/pkcs7-mime</td> \n     \n       <td>.p7m</td>\n       <td>application/pkcs7-mime</td>\n      </tr> \n      <tr>\n       <td>.p7r</td>\n       <td>application/x-pkcs7-certreqresp</td> \n     \n       <td>.p7s</td>\n       <td>application/pkcs7-signature</td>\n      </tr> \n      <tr>\n       <td>.pc5</td>\n       <td>application/x-pc5</td> \n      \n       <td>.pci</td>\n       <td>application/x-pci</td>\n      </tr> \n      <tr>\n       <td>.pcl</td>\n       <td>application/x-pcl</td> \n      \n       <td>.pcx</td>\n       <td>application/x-pcx</td>\n      </tr> \n      <tr>\n       <td>.pdf</td>\n       <td>application/pdf</td> \n      \n       <td>.pdf</td>\n       <td>application/pdf</td>\n      </tr> \n      <tr>\n       <td>.pdx</td>\n       <td>application/vnd.adobe.pdx</td> \n      \n       <td>.pfx</td>\n       <td>application/x-pkcs12</td>\n      </tr> \n      <tr>\n       <td>.pgl</td>\n       <td>application/x-pgl</td> \n     \n       <td>.pic</td>\n       <td>application/x-pic</td>\n      </tr> \n      <tr>\n       <td>.pko</td>\n       <td>application/vnd.ms-pki.pko</td> \n     \n       <td>.pl</td>\n       <td>application/x-perl</td>\n      </tr> \n      <tr>\n       <td>.plg</td>\n       <td>text/html</td> \n       <td>.pls</td>\n       <td>audio/scpls</td>\n      </tr> \n      <tr>\n       <td>.plt</td>\n       <td>application/x-plt</td> \n       <td>.png</td>\n       <td>image/png</td>\n      </tr> \n      <tr>\n       <td>.png</td>\n       <td>application/x-png</td> \n       <td>.pot</td>\n       <td>application/vnd.ms-powerpoint</td>\n      </tr> \n      <tr>\n       <td>.ppa</td>\n       <td>application/vnd.ms-powerpoint</td> \n       <td>.ppm</td>\n       <td>application/x-ppm</td>\n      </tr> \n      <tr>\n       <td>.pps</td>\n       <td>application/vnd.ms-powerpoint</td> \n       <td>.ppt</td>\n       <td>application/vnd.ms-powerpoint</td>\n      </tr> \n      <tr>\n       <td>.ppt</td>\n       <td>application/x-ppt</td> \n       <td>.pr</td>\n       <td>application/x-pr</td>\n      </tr> \n      <tr>\n       <td>.prf</td>\n       <td>application/pics-rules</td> \n       <td>.prn</td>\n       <td>application/x-prn</td>\n      </tr> \n      <tr>\n       <td>.prt</td>\n       <td>application/x-prt</td> \n       <td>.ps</td>\n       <td>application/x-ps</td>\n      </tr> \n      <tr>\n       <td>.ps</td>\n       <td>application/postscript</td> \n       <td>.ptn</td>\n       <td>application/x-ptn</td>\n      </tr> \n      <tr>\n       <td>.pwz</td>\n       <td>application/vnd.ms-powerpoint</td> \n       <td>.r3t</td>\n       <td>text/vnd.rn-realtext3d</td>\n      </tr> \n      <tr>\n       <td>.ra</td>\n       <td>audio/vnd.rn-realaudio</td> \n       <td>.ram</td>\n       <td>audio/x-pn-realaudio</td>\n      </tr> \n      <tr>\n       <td>.ras</td>\n       <td>application/x-ras</td> \n       <td>.rat</td>\n       <td>application/rat-file</td>\n      </tr> \n      <tr>\n       <td>.rdf</td>\n       <td>text/xml</td> \n       <td>.rec</td>\n       <td>application/vnd.rn-recording</td>\n      </tr> \n      <tr>\n       <td>.red</td>\n       <td>application/x-red</td> \n       <td>.rgb</td>\n       <td>application/x-rgb</td>\n      </tr> \n      <tr>\n       <td>.rjs</td>\n       <td>application/vnd.rn-realsystem-rjs</td> \n       <td>.rjt</td>\n       <td>application/vnd.rn-realsystem-rjt</td>\n      </tr> \n      <tr>\n       <td>.rlc</td>\n       <td>application/x-rlc</td> \n       <td>.rle</td>\n       <td>application/x-rle</td>\n      </tr> \n      <tr>\n       <td>.rm</td>\n       <td>application/vnd.rn-realmedia</td> \n       <td>.rmf</td>\n       <td>application/vnd.adobe.rmf</td>\n      </tr> \n      <tr>\n       <td>.rmi</td>\n       <td>audio/mid</td> \n       <td>.rmj</td>\n       <td>application/vnd.rn-realsystem-rmj</td>\n      </tr> \n      <tr>\n       <td>.rmm</td>\n       <td>audio/x-pn-realaudio</td> \n       <td>.rmp</td>\n       <td>application/vnd.rn-rn_music_package</td>\n      </tr> \n      <tr>\n       <td>.rms</td>\n       <td>application/vnd.rn-realmedia-secure</td> \n       <td>.rmvb</td>\n       <td>application/vnd.rn-realmedia-vbr</td>\n      </tr> \n      <tr>\n       <td>.rmx</td>\n       <td>application/vnd.rn-realsystem-rmx</td> \n       <td>.rnx</td>\n       <td>application/vnd.rn-realplayer</td>\n      </tr> \n      <tr>\n       <td>.rp</td>\n       <td>image/vnd.rn-realpix</td> \n       <td>.rpm</td>\n       <td>audio/x-pn-realaudio-plugin</td>\n      </tr> \n      <tr>\n       <td>.rsml</td>\n       <td>application/vnd.rn-rsml</td> \n       <td>.rt</td>\n       <td>text/vnd.rn-realtext</td>\n      </tr> \n      <tr>\n       <td>.rtf</td>\n       <td>application/msword</td> \n       <td>.rtf</td>\n       <td>application/x-rtf</td>\n      </tr> \n      <tr>\n       <td>.rv</td>\n       <td>video/vnd.rn-realvideo</td> \n       <td>.sam</td>\n       <td>application/x-sam</td>\n      </tr> \n      <tr>\n       <td>.sat</td>\n       <td>application/x-sat</td> \n       <td>.sdp</td>\n       <td>application/sdp</td>\n      </tr> \n      <tr>\n       <td>.sdw</td>\n       <td>application/x-sdw</td> \n       <td>.sit</td>\n       <td>application/x-stuffit</td>\n      </tr> \n      <tr>\n       <td>.slb</td>\n       <td>application/x-slb</td> \n       <td>.sld</td>\n       <td>application/x-sld</td>\n      </tr> \n      <tr>\n       <td>.slk</td>\n       <td>drawing/x-slk</td> \n       <td>.smi</td>\n       <td>application/smil</td>\n      </tr> \n      <tr>\n       <td>.smil</td>\n       <td>application/smil</td> \n       <td>.smk</td>\n       <td>application/x-smk</td>\n      </tr> \n      <tr>\n       <td>.snd</td>\n       <td>audio/basic</td> \n       <td>.sol</td>\n       <td>text/plain</td>\n      </tr> \n      <tr>\n       <td>.sor</td>\n       <td>text/plain</td> \n       <td>.spc</td>\n       <td>application/x-pkcs7-certificates</td>\n      </tr> \n      <tr>\n       <td>.spl</td>\n       <td>application/futuresplash</td> \n       <td>.spp</td>\n       <td>text/xml</td>\n      </tr> \n      <tr>\n       <td>.ssm</td>\n       <td>application/streamingmedia</td> \n       <td>.sst</td>\n       <td>application/vnd.ms-pki.certstore</td>\n      </tr> \n      <tr>\n       <td>.stl</td>\n       <td>application/vnd.ms-pki.stl</td> \n       <td>.stm</td>\n       <td>text/html</td>\n      </tr> \n      <tr>\n       <td>.sty</td>\n       <td>application/x-sty</td> \n       <td>.svg</td>\n       <td>text/xml</td>\n      </tr> \n      <tr>\n       <td>.swf</td>\n       <td>application/x-shockwave-flash</td> \n       <td>.tdf</td>\n       <td>application/x-tdf</td>\n      </tr> \n      <tr>\n       <td>.tg4</td>\n       <td>application/x-tg4</td> \n       <td>.tga</td>\n       <td>application/x-tga</td>\n      </tr> \n      <tr>\n       <td>.tif</td>\n       <td>image/tiff</td> \n       <td>.tif</td>\n       <td>application/x-tif</td>\n      </tr> \n      <tr>\n       <td>.tiff</td>\n       <td>image/tiff</td> \n       <td>.tld</td>\n       <td>text/xml</td>\n      </tr> \n      <tr>\n       <td>.top</td>\n       <td>drawing/x-top</td> \n       <td>.torrent</td>\n       <td>application/x-bittorrent</td>\n      </tr> \n      <tr>\n       <td>.tsd</td>\n       <td>text/xml</td> \n       <td>.txt</td>\n       <td>text/plain</td>\n      </tr> \n      <tr>\n       <td>.uin</td>\n       <td>application/x-icq</td> \n       <td>.uls</td>\n       <td>text/iuls</td>\n      </tr> \n      <tr>\n       <td>.vcf</td>\n       <td>text/x-vcard</td> \n       <td>.vda</td>\n       <td>application/x-vda</td>\n      </tr> \n      <tr>\n       <td>.vdx</td>\n       <td>application/vnd.visio</td> \n       <td>.vml</td>\n       <td>text/xml</td>\n      </tr> \n      <tr>\n       <td>.vpg</td>\n       <td>application/x-vpeg005</td> \n       <td>.vsd</td>\n       <td>application/vnd.visio</td>\n      </tr> \n      <tr>\n       <td>.vsd</td>\n       <td>application/x-vsd</td> \n       <td>.vss</td>\n       <td>application/vnd.visio</td>\n      </tr> \n      <tr>\n       <td>.vst</td>\n       <td>application/vnd.visio</td> \n       <td>.vst</td>\n       <td>application/x-vst</td>\n      </tr> \n      <tr>\n       <td>.vsw</td>\n       <td>application/vnd.visio</td> \n       <td>.vsx</td>\n       <td>application/vnd.visio</td>\n      </tr> \n      <tr>\n       <td>.vtx</td>\n       <td>application/vnd.visio</td> \n       <td>.vxml</td>\n       <td>text/xml</td>\n      </tr> \n      <tr>\n       <td>.wav</td>\n       <td>audio/wav</td> \n       <td>.wax</td>\n       <td>audio/x-ms-wax</td>\n      </tr> \n      <tr>\n       <td>.wb1</td>\n       <td>application/x-wb1</td> \n       <td>.wb2</td>\n       <td>application/x-wb2</td>\n      </tr> \n      <tr>\n       <td>.wb3</td>\n       <td>application/x-wb3</td> \n       <td>.wbmp</td>\n       <td>image/vnd.wap.wbmp</td>\n      </tr> \n      <tr>\n       <td>.wiz</td>\n       <td>application/msword</td> \n       <td>.wk3</td>\n       <td>application/x-wk3</td>\n      </tr> \n      <tr>\n       <td>.wk4</td>\n       <td>application/x-wk4</td> \n       <td>.wkq</td>\n       <td>application/x-wkq</td>\n      </tr> \n      <tr>\n       <td>.wks</td>\n       <td>application/x-wks</td> \n       <td>.wm</td>\n       <td>video/x-ms-wm</td>\n      </tr> \n      <tr>\n       <td>.wma</td>\n       <td>audio/x-ms-wma</td> \n       <td>.wmd</td>\n       <td>application/x-ms-wmd</td>\n      </tr> \n      <tr>\n       <td>.wmf</td>\n       <td>application/x-wmf</td> \n       <td>.wml</td>\n       <td>text/vnd.wap.wml</td>\n      </tr> \n      <tr>\n       <td>.wmv</td>\n       <td>video/x-ms-wmv</td> \n       <td>.wmx</td>\n       <td>video/x-ms-wmx</td>\n      </tr> \n      <tr>\n       <td>.wmz</td>\n       <td>application/x-ms-wmz</td> \n       <td>.wp6</td>\n       <td>application/x-wp6</td>\n      </tr> \n      <tr>\n       <td>.wpd</td>\n       <td>application/x-wpd</td> \n       <td>.wpg</td>\n       <td>application/x-wpg</td>\n      </tr> \n      <tr>\n       <td>.wpl</td>\n       <td>application/vnd.ms-wpl</td> \n       <td>.wq1</td>\n       <td>application/x-wq1</td>\n      </tr> \n      <tr>\n       <td>.wr1</td>\n       <td>application/x-wr1</td> \n       <td>.wri</td>\n       <td>application/x-wri</td>\n      </tr> \n      <tr>\n       <td>.wrk</td>\n       <td>application/x-wrk</td> \n       <td>.ws</td>\n       <td>application/x-ws</td>\n      </tr> \n      <tr>\n       <td>.ws2</td>\n       <td>application/x-ws</td> \n       <td>.wsc</td>\n       <td>text/scriptlet</td>\n      </tr> \n      <tr>\n       <td>.wsdl</td>\n       <td>text/xml</td> \n       <td>.wvx</td>\n       <td>video/x-ms-wvx</td>\n      </tr> \n      <tr>\n       <td>.xdp</td>\n       <td>application/vnd.adobe.xdp</td> \n       <td>.xdr</td>\n       <td>text/xml</td>\n      </tr> \n      <tr>\n       <td>.xfd</td>\n       <td>application/vnd.adobe.xfd</td> \n       <td>.xfdf</td>\n       <td>application/vnd.adobe.xfdf</td>\n      </tr> \n      <tr>\n       <td>.xhtml</td>\n       <td>text/html</td> \n       <td>.xls</td>\n       <td>application/vnd.ms-excel</td>\n      </tr> \n      <tr>\n       <td>.xls</td>\n       <td>application/x-xls</td> \n       <td>.xlw</td>\n       <td>application/x-xlw</td>\n      </tr> \n      <tr>\n       <td>.xml</td>\n       <td>text/xml</td> \n       <td>.xpl</td>\n       <td>audio/scpls</td>\n      </tr> \n      <tr>\n       <td>.xq</td>\n       <td>text/xml</td> \n       <td>.xql</td>\n       <td>text/xml</td>\n      </tr> \n      <tr>\n       <td>.xquery</td>\n       <td>text/xml</td> \n       <td>.xsd</td>\n       <td>text/xml</td>\n      </tr> \n      <tr>\n       <td>.xsl</td>\n       <td>text/xml</td> \n       <td>.xslt</td>\n       <td>text/xml</td>\n      </tr> \n      <tr>\n       <td>.xwd</td>\n       <td>application/x-xwd</td> \n       <td>.x_b</td>\n       <td>application/x-x_b</td>\n      </tr>\n\t  <tr>\n       <td>.sis</td>\n       <td>application/vnd.symbian.install</td>\n\t   <td>.sisx</td>\n       <td>application/vnd.symbian.install</td>\n      </tr>\n      <tr>\n       <td>.x_t</td>\n       <td>application/x-x_t</td>\n\t   <td>.ipa</td>\n       <td>application/vnd.iphone</td>\n      </tr> \n\t  <tr>\n       <td>.apk</td>\n       <td>application/vnd.android.package-archive</td>\n\t   <td>.xap</td>\n       <td>application/x-silverlight-app</td>\n      </tr>\n     </tbody>\n    </table>","url":"","summary":"","reference":"MIME类型|https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Basics_of_HTTP/MIME_types\n常见MIME类型|https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types","dot":""}]},{"title":"缓存","fold":false,"list":[{"prefix":"","tag":"Cache-control","suffix":"","desc":"控制缓存的行为","url":"","summary":"+ Cache-control: max-age=5 表示当访问此网页后的5秒内再次访问不会去服务器 \n+ Cache-Control: no-cache：这个很容易让人产生误解，使人误以为是响应不被缓存。\n实际上Cache-Control: no-cache是会被缓存的，只不过每次在向客户端（浏览器）提供响应数据时，缓存都要向服务器评估缓存响应的有效性。 \n+ Cache-Control: no-store：这个才是响应不被缓存的意思。 \n+ Pragma: no-cache：跟Cache-Control: no-cache相同，Pragma: no-cache兼容http 1.0 ，Cache-Control: no-cache是http 1.1提供的。 \n因此，Pragma: no-cache可以应用到http 1.0 和http 1.1,而Cache-Control: no-cache只能应用于http 1.1.\n\n另外，客户端不带这个头部请求的话，如果使用本地缓存的话，返回状态码为304。\n如果请求头中有cache-control：no-cache头部。则不使用本地缓存，返回状态码不为304（一般为200）。","reference":"","dot":""}]},{"title":"优化","fold":false,"list":[{"prefix":"","tag":"RTT","suffix":"","desc":"1RTT,通常1个HTTP数据报在14KB左右.\n同一个域名同时最多建立6个连接","url":"","summary":"","reference":"","dot":""}]}]}]},{"column":[{"title":"验证","barcolor":"","fold":false,"box":[{"title":"请求","fold":false,"list":[{"prefix":"","tag":"Authorization","suffix":"","desc":"","url":"","summary":"","reference":"","dot":""}]},{"title":"Cookie","fold":false,"list":[]}]}]},{"column":[{"title":"HTTP","barcolor":"","fold":false,"box":[{"title":"node server","fold":false,"list":[{"prefix":"","tag":"http.STATUS_CODES","suffix":"","desc":"所有标准 HTTP 响应状态码的集合，以及每个状态码的简短描述。\n例如， `http.STATUS_CODES[404] === 'Not Found'`","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"http.createServer","suffix":"(fn(req,res))","desc":"创建HTTP服务器\nrequestListener 是一个自动添加到 'request' 事件的函数","url":"","summary":"","reference":"","dot":""},{"prefix":"server","tag":".on","suffix":"(event,fn)","desc":"+ checkContinue 每次收到 HTTP Expect: 100-continue 的请求时都会触发\n+ checkExpectation 每次收到带有 HTTP Expect 请求头的请求时触发，其中值不是 100-continue。 \n+ clientError 如果客户端连接触发 'error' 事件，则会在此处转发。 此事件的监听器负责关闭或销毁底层套接字。\n+ close 当服务器关闭时触发。\n+ connect 每次客户端请求 HTTP CONNECT 方法时触发。 如果未监听此事件，则请求 CONNECT 方法的客户端将关闭其连接。\n+ connection 建立新的 TCP 流时会触发此事件。\n+ request 每次有请求时都会触发。\n+ upgrade 每次客户端请求 HTTP 升级时发出。 ","url":"","summary":"","reference":"","dot":""},{"prefix":"server","tag":".listen","suffix":"(port)","desc":"启动 HTTP 服务器监听连接。","url":"","summary":"","reference":"","dot":""},{"prefix":"server","tag":".close","suffix":"(fn)","desc":"停止服务器接受新连接","url":"","summary":"","reference":"","dot":""},{"prefix":"server","tag":".setTimeout","suffix":"(ms,fn)","desc":"设置套接字的超时值，并在服务器对象上触发 'timeout' 事件，如果发生超时，则将套接字作为参数传入。\n默认情况下，服务器的超时值为 2 分钟，如果超时，套接字会自动销毁。","url":"","summary":"","reference":"","dot":""}]},{"title":"node IncomingMessage","fold":false,"list":[{"prefix":"msg","tag":".on","suffix":"('data',fn)","desc":"IncomingMessage 对象由 http.Server 或 http.ClientRequest 创建，并分别作为第一个参数传给 'request' 和 'response' 事件。 它可用于访问响应状态、消息头、以及数据。继承自: stream.Readable","url":"","summary":"","reference":"","dot":""},{"prefix":"msg","tag":".method","suffix":"","desc":"请求方法为字符串。 只读。 示例：'GET'、 'DELETE'。","url":"","summary":"","reference":"","dot":""},{"prefix":"msg","tag":".url","suffix":"","desc":"请求的 URL 字符串。","url":"","summary":"","reference":"","dot":""},{"prefix":"msg","tag":".headers","suffix":"","desc":"消息头的名称和值的键值对。 消息头的名称都是小写的。","url":"","summary":"","reference":"","dot":""},{"prefix":"msg","tag":".statusCode","suffix":"","desc":"3 位 HTTP 响应状态码。 例如 404。","url":"","summary":"","reference":"","dot":""},{"prefix":"msg","tag":".statusMessage","suffix":"","desc":"HTTP 响应状态消息（原因短语）","url":"","summary":"","reference":"","dot":""},{"prefix":"msg","tag":".complete","suffix":"","desc":"如果已收到并成功解析完整的 HTTP 消息，则 message.complete 属性将为 true。","url":"","summary":"","reference":"","dot":""}]},{"title":"node ServerResponse","fold":false,"list":[{"prefix":"res","tag":".on","suffix":"(event,fn)","desc":"+ close 表明底层的连接已被终止。\n+ finish 响应发送后触发","url":"","summary":"","reference":"","dot":""},{"prefix":"res","tag":".writeHead","suffix":"(code,headers)","desc":"向请求发送响应头。\n```\nconst body = 'hello world';\nresponse\n  .writeHead(200, {\n    'Content-Length': Buffer.byteLength(body),\n    'Content-Type': 'text/plain'\n  })\n  .end(body);\n```","url":"","summary":"","reference":"","dot":""},{"prefix":"res","tag":".setHeader","suffix":"(key,val)","desc":"为隐式响应头设置单个响应头的值。\n`response.flushHeaders()` 刷新响应头\n`response.getHeader(name)` 读出已排队但未发送到客户端的响应头。\n`response.getHeaderNames()` 返回一个数组，其中包含当前传出的响应头的唯一名称。 所有响应头名称都是小写的。\n`response.getHeaders()` 返回当前传出的响应头的浅拷贝。\n`response.hasHeader(name)` 如果当前在传出的响应头中设置了由 name 标识的响应头，则返回 true。 响应头名称匹配不区分大小写。\n`response.removeHeader(name)` 移除排队等待中的隐式发送的响应头。","url":"","summary":"","reference":"","dot":""},{"prefix":"res","tag":".statusCode","suffix":"","desc":"响应头发送到客户端后，此属性表示已发送的状态码。","url":"","summary":"","reference":"","dot":""},{"prefix":"res","tag":".statusMessage","suffix":"","desc":"响应头发送到客户端后，此属性表示已发送的状态消息。","url":"","summary":"","reference":"","dot":""},{"prefix":"res","tag":".write","suffix":"(chunk,fn)","desc":"这会发送一块响应主体。 可以多次调用该方法以提供连续的响应主体片段。","url":"","summary":"","reference":"","dot":""},{"prefix":"res","tag":".end","suffix":"([data],fn)","desc":"此方法向服务器发出信号，表明已发送所有响应头和主体，该服务器应该视为此消息已完成。 必须在每个响应上调用此 response.end() 方法。","url":"","summary":"","reference":"","dot":""}]},{"title":"node client","fold":false,"list":[{"prefix":"","tag":"http.get","suffix":"(url,fn(res))","desc":"用于发出get请求,自动调用end方法\n返回http.ClientRequest实例","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"http.request","suffix":"(opt,fn(res))","desc":"可设定具体选项,需要手动end\n返回http.ClientRequest实例","url":"","summary":"```\nconst postData = querystring.stringify({\n  'msg': '你好世界'\n});\n\nconst options = {\n  hostname: 'nodejs.cn',\n  port: 80,\n  path: '/upload',\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/x-www-form-urlencoded',\n    'Content-Length': Buffer.byteLength(postData)\n  }\n};\n\nconst req = http.request(options, (res) => {\n  console.log(`状态码: ${res.statusCode}`);\n  console.log(`响应头: ${JSON.stringify(res.headers)}`);\n  res.setEncoding('utf8');\n  res.on('data', (chunk) => {\n    console.log(`响应主体: ${chunk}`);\n  });\n  res.on('end', () => {\n    console.log('响应中已无数据');\n  });\n});\n\nreq.on('error', (e) => {\n  console.error(`请求遇到问题: ${e.message}`);\n});\n\n// 将数据写入请求主体。\nreq.write(postData);\nreq.end();\n```","reference":"参考资料|http://nodejs.cn/api/http.html#http_http_request_url_options_callback","dot":""}]},{"title":"node ClientRequest","fold":false,"list":[{"prefix":"req","tag":".on","suffix":"(event,fn)","desc":"+ abort 当请求被客户端中止时触发。 此事件仅在第一次调用 abort() 时触发。\n+ connect 每次服务器使用 CONNECT 方法响应请求时都会触发\n+ continue 当服务器发送 100 Continue HTTP 响应时触发\n+ information 服务器发送 1xx 中间响应（不包括 101 Upgrade）时触发\n+ response 当收到此请求的响应时触发。 此事件仅触发一次\n+ socket 此事件保证传入 <net.Socket> 类（<stream.Duplex> 的子类）的实例\n+ timeout 当底层套接字因不活动而超时时触发。 这只会通知套接字已空闲。 必须手动中止请求。\n+ upgrade 每次服务器响应升级请求时发出。","url":"","summary":"","reference":"","dot":""},{"prefix":"req","tag":".setHeader","suffix":"(key,val)","desc":"为请求头对象设置单个请求头的值。\n`req.getHeader(key)`读取请求中的一个请求头。 该名称不区分大小写。\n`req.removeHeader(key)`移除已定义到请求头对象中的请求头。","url":"","summary":"","reference":"","dot":""},{"prefix":"req","tag":".write","suffix":"(chunk,fn)","desc":"发送一个请求主体的数据块。 通过多次调用此方法，可以将请求主体发送到服务器，在这种情况下，建议在创建请求时使用 ['Transfer-Encoding', 'chunked'] 请求头行。","url":"","summary":"","reference":"","dot":""},{"prefix":"req","tag":".end","suffix":"([data],fn)","desc":"完成发送请求。","url":"","summary":"","reference":"","dot":""},{"prefix":"req","tag":".abort()","suffix":"","desc":"将请求标记为中止。 调用此方法将导致响应中剩余的数据被丢弃并且套接字被销毁。\nrequest.aborted 如果请求已中止，则 request.aborted 属性将会为 true。","url":"","summary":"","reference":"","dot":""},{"prefix":"req","tag":".<prop>","suffix":"","desc":"request.path 请求的路径","url":"","summary":"","reference":"","dot":""},{"prefix":"req","tag":".<fn>","suffix":"","desc":"`request.setTimeout(timeout[, callback])`\n`request.setNoDelay([noDelay])`\n`request.setSocketKeepAlive([enable][, initialDelay])` ","url":"","summary":"","reference":"","dot":""}]},{"title":"framework","fold":false,"list":[{"prefix":"","tag":"koa","suffix":"","desc":"+ ctx.req Node 的 request 对象.\n+ ctx.request  koa 的 Request 对象.\n+ ctx.res Node 的 response 对象.\n+ ctx.response koa 的 Response 对象.","url":"https://koa.bootcss.com/#context","summary":"","reference":"","dot":""},{"prefix":"","tag":"flask","suffix":"","desc":"","url":"https://dormousehole.readthedocs.io/en/latest/quickstart.html#quickstart","summary":"","reference":"","dot":""}]},{"title":"python","fold":false,"list":[{"prefix":"","tag":"requests","suffix":"","desc":"","url":"","summary":"","reference":"urllib|https://www.liaoxuefeng.com/wiki/1016959663602400/1019223241745024\nrequests|https://www.liaoxuefeng.com/wiki/1016959663602400/1183249464292448","dot":""},{"prefix":"","tag":"make_server","suffix":"","desc":"","url":"https://www.liaoxuefeng.com/wiki/1016959663602400/1017805733037760","summary":"","reference":"","dot":""}]}]}]},{"column":[{"title":"WebSocket","barcolor":"","fold":false,"box":[{"title":"客户端","fold":false,"list":[{"prefix":"","tag":"new WebSocket","suffix":"(ws://url)","desc":"新建WebSocket实例","url":"","summary":"","reference":"","dot":""},{"prefix":"ws.","tag":"readyState","suffix":"","desc":"readyState属性返回实例对象的当前状态，共有四种。\nCONNECTING：值为0，表示正在连接。\nOPEN：值为1，表示连接成功，可以通信了。\nCLOSING：值为2，表示连接正在关闭。\nCLOSED：值为3，表示连接已经关闭，或者打开连接失败。","url":"","summary":"","reference":"","dot":""},{"prefix":"ws.","tag":"binaryType","suffix":"","desc":"指定收到的二进制数据类型","url":"","summary":"","reference":"","dot":""},{"prefix":"ws.","tag":"bufferedAmount","suffix":"","desc":"表示还有多少字节的二进制数据没有发送出去。它可以用来判断发送是否结束。","url":"","summary":"```\nvar data = new ArrayBuffer(10000000);\nsocket.send(data);\n\nif (socket.bufferedAmount === 0) {\n  // 发送完毕\n} else {\n  // 发送还没结束\n}\n```","reference":"","dot":""}]},{"title":"事件","fold":false,"list":[{"prefix":"ws","tag":".addEventListener","suffix":"(event,fn)","desc":"","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"open","suffix":"","desc":"连接成功","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"close","suffix":"","desc":"连接关闭","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"message","suffix":"","desc":"收到服务器数据","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"error","suffix":"","desc":"发生错误","url":"","summary":"","reference":"","dot":""}]},{"title":"方法","fold":false,"list":[{"prefix":"ws","tag":".send","suffix":"(data)","desc":"发送数据","url":"","summary":"发送 Blob 对象\n```\nvar file = document\n  .querySelector('input[type=\"file\"]')\n  .files[0];\nws.send(file);\n```\n发送 ArrayBuffer 对象\n```\n// Sending canvas ImageData as ArrayBuffer\nvar img = canvas_context.getImageData(0, 0, 400, 320);\nvar binary = new Uint8Array(img.data.length);\nfor (var i = 0; i < img.data.length; i++) {\n  binary[i] = img.data[i];\n}\nws.send(binary.buffer);\n```","reference":"","dot":""},{"prefix":"ws","tag":".close","suffix":"([code,data])","desc":"code 默认1005。\nreason 关闭原因","url":"","summary":"","reference":"","dot":""}]},{"title":"服务端","fold":false,"list":[{"prefix":"","tag":" ","suffix":"","desc":"","url":"","summary":"","reference":"","dot":""},{"prefix":"请求头与响应头","tag":" ","suffix":"","desc":"# 请求头\n```\nGET / HTTP/1.1\nConnection: Upgrade\nUpgrade: websocket\nHost: example.com\nOrigin: null\nSec-WebSocket-Key: sN9cRrP/n9NdMgdcy2VJFQ==\nSec-WebSocket-Version: 13\n```\n\n# 响应头\n```\nHTTP/1.1 101 Switching Protocols\nConnection: Upgrade\nUpgrade: websocket\nSec-WebSocket-Accept: fFBooB7FAkLlXgRSz0BT3v4hq5s=\nSec-WebSocket-Origin: null\nSec-WebSocket-Location: ws://example.com/\n```","url":"","summary":"","reference":"","dot":""},{"prefix":"实现原理","tag":" ","suffix":"","desc":"服务端实现:\n1.根据请求头判断是否为WebSocket请求\n2.校验Sec-WebSocket-Key\n```\nconst GUID = '258EAFA5-E914-47DA-95CA-C5AB0DC85B11'\nconst key = headers['sec-websocket-key']\nconst hash = crypto.createHash('sha1') // 创建一个签名算法为sha1的哈希对象\nhash.update(`${key}${GUID}`)  // 将key和GUID连接后，更新到hash\nconst result = hash.digest('base64') // 生成base64字符串\n```","url":"","summary":"","reference":"","dot":"","title":"node server"},{"prefix":"","tag":"ws","suffix":"","desc":"","url":"https://github.com/websockets/ws","summary":"","reference":"参考资料1|https://blog.csdn.net/chencl1986/article/details/88411056\n参考资料2|https://juejin.im/post/5e01e10ce51d4557f17fc14a","dot":""},{"prefix":"","tag":"socket.io","suffix":"","desc":"","url":"https://www.w3cschool.cn/socket/socket-1olq2egc.html","summary":"","reference":"Github|https://github.com/socketio/socket.io","dot":""}]}]}]},{"column":[{"title":"TCP","barcolor":"","fold":false,"box":[{"title":"node server","fold":false,"list":[{"prefix":"","tag":"net.createServer","suffix":"(fn(socket))","desc":"创建一个 TCP 服务器\n参数 connectionListener 自动给 'connection' 事件创建监听器。\n`const server = new net.Server([options][, connectionListener])`","url":"","summary":"","reference":"","dot":""},{"prefix":"server","tag":".listen","suffix":"(port)","desc":"启动一个服务器来监听连接","url":"","summary":"","reference":"参考资料|http://nodejs.cn/api/net.html#net_server_listen","dot":""},{"prefix":"server","tag":".on","suffix":"(event,fn)","desc":"+ connection (socket) : 当一个新的连接建立的时候触发,socket 是一个 net.Socket 实例.\n+ listening  : 当调用 server.listen() 绑定服务器之后触发。\n+ close :当 server 关闭的时候触发。 如果有连接存在，直到所有的连接结束才会触发这个事件。\n+ error (err) : 当错误出现的时候触发.'close' 事件不会在这个事件触发后继续触发，除非 server.close() 是手动调用.","url":"","summary":"","reference":"","dot":""}]},{"title":"node client","fold":false,"list":[{"prefix":"","tag":"net.connect","suffix":"(port,host,fn)","desc":"返回一个新的 'net.Socket'，并连接到指定的地址和端口。\n当 socket 建立的时候，将会触发 'connect' 事件。\n`const client = net.createConnection(options[, connectListener])` 的别名。","url":"","summary":"","reference":"参考资料|http://nodejs.cn/api/net.html#net_net_connect","dot":""}]},{"title":"net.Socket","fold":false,"list":[{"prefix":"","tag":"new net.Socket","suffix":"(opt)","desc":"`socket.connect(port[, host][, connectListener])`\n指定端口 port 和 主机 host，创建 socket 连接 。参数 host 默认为 localhost。通常情况不需要使用 net.createConnection 打开 socket。只有你实现了自己的 socket 时才会用到。\n\n`socket.connect(path[, connectListener])`\n打开指定路径的 unix socket。通常情况不需要使用 net.createConnection 打开 socket。只有你实现了自己的 socket 时才会用到。","url":"","summary":"","reference":"","dot":""},{"prefix":"socket","tag":".on","suffix":"(event,fn)","desc":"+ lookup 在解析域名后，但在连接前，触发这个事件。对 UNIX sokcet 不适用。\n+ connect 成功建立 socket 连接时触发。\n+ ready 套接字准备好使用时触发,'connect' 后立即触发。\n+ **data** 当接收到数据时触发。\n+ end 当 socket 另一端发送 FIN 包时，触发该事件。\n+ timeout 当 socket 空闲超时时触发，仅是表明 socket 已经空闲。用户必须手动关闭连接。\n+ drain 当写缓存为空得时候触发。可用来控制上传。\n+ error 错误发生时触发。\n+ close 当 socket 完全关闭时触发。参数 had_error 是布尔值，它表示是否因为传输错误导致 socket 关闭。","url":"","summary":"","reference":"","dot":""},{"prefix":"socket","tag":".write","suffix":"(data,fn)","desc":"在 socket 上发送数据\n第二个参数指定了字符串的编码，默认是 UTF8 编码。","url":"","summary":"","reference":"","dot":""},{"prefix":"socket.","tag":"<prop>","suffix":"","desc":"+ socket.bufferSize\n该属性显示了要写入缓冲区的字节数。\n\n+ socket.remoteAddress \n远程的 IP 地址字符串，例如：'74.125.127.100' or '2001:4860:a005::68'。\n+ socket.remoteFamily\n远程IP协议族字符串，比如 'IPv4' or 'IPv6'。\n+ socket.remotePort\n远程端口，数字表示，例如：80 or 21。\n\n+ socket.localAddress\n网络连接绑定的本地接口 远程客户端正在连接的本地 IP 地址，字符串表示。例如，如果你在监听'0.0.0.0'而客户端连接在'192.168.1.1'，这个值就会是 '192.168.1.1'。\n+ socket.localPort\n本地端口地址，数字表示。例如：80 or 21。\n\n+ socket.bytesRead\n接收到得字节数。\n+ socket.bytesWritten\n发送的字节数。","url":"","summary":"","reference":"","dot":""},{"prefix":"socket","tag":".<fn>","suffix":"","desc":"+ socket.setEncoding([encoding])\n设置编码\n+ socket.write(data[, encoding][, callback])\n在 socket 上发送数据。第二个参数指定了字符串的编码，默认是 UTF8 编码。\n+ socket.end([data][, encoding])\n半关闭 socket。例如，它发送一个 FIN 包。可能服务器仍在发送数据。\n+ socket.destroy()\n确保没有 I/O 活动在这个套接字上。只有在错误发生情况下才需要。（处理错误等等）。\n+ socket.pause()\n暂停读取数据。就是说，不会再触发 data 事件。对于控制上传非常有用。\n+ socket.resume()\n调用 pause() 后想恢复读取数据。\n+ socket.setTimeout(timeout[, callback])\nsocket 闲置时间超过 timeout 毫秒后 ，将 socket 设置为超时。\n+ socket.setNoDelay([noDelay])\n禁用纳格（Nagle）算法。默认情况下 TCP 连接使用纳格算法，在发送前他们会缓冲数据。将 noDelay 设置为 true 将会在调用 socket.write() 时立即发送数据。noDelay 默认值为 true。\n+ socket.setKeepAlive([enable][, initialDelay])\n禁用/启用长连接功能，并在发送第一个在闲置 socket 上的长连接 probe 之前，可选地设定初始延时。默认为 false。 设定 initialDelay （毫秒），来设定收到的最后一个数据包和第一个长连接probe之间的延时。将 initialDelay 设为0，将会保留默认（或者之前）的值。默认值为0.\n+ socket.address()\n操作系统返回绑定的地址，协议族名和服务器端口。返回的对象有 3 个属性，比如{ port: 12346, family: 'IPv4', address: '127.0.0.1' }。\n+ socket.unref()\n如果这是事件系统中唯一一个活动的服务器，调用 unref 将允许程序退出。如果服务器已被 unref，则再次调用 unref 并不会产生影响。\n+ socket.ref()\n与 unref 相反，如果这是唯一的服务器，在之前被 unref 了的服务器上调用 ref 将不会让程序退出（默认行为）。如果服务器已经被 ref，则再次调用 ref 并不会产生影响。","url":"","summary":"","reference":"","dot":""}]},{"title":"python socket","fold":false,"list":[{"prefix":"","tag":"socket.socket","suffix":"(socket.AF_INET, socket.SOCK_STREAM)","desc":"导入socket库:\n`import socket`\n创建一个socket:\n`s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)`\n\n\n创建Socket时，AF\\_INET指定使用IPv4协议，如果要用更先进的IPv6，就指定为AF_INET6","url":"","summary":"","reference":"参考资料|https://www.runoob.com/python3/python3-socket.html","dot":""},{"prefix":"s","tag":".connect","suffix":"((host,port))","desc":"建立连接:\n`s.connect(('www.abc.com', 80))`\n注意参数是一个tuple，包含地址和端口号。","url":"","summary":"","reference":"","dot":""},{"prefix":"s","tag":".send","suffix":"(data)","desc":"发送数据","url":"","summary":"","reference":"","dot":""},{"prefix":"s","tag":".recv","suffix":"(max)","desc":"接收数据时，调用recv(max)方法，一次最多接收指定的字节数，因此，在一个while循环中反复接收，直到recv()返回空数据，表示接收完毕，退出循环。\n```\n# 接收数据:\nbuffer = []\nwhile True:\n    # 每次最多接收1k字节:\n    d = s.recv(1024)\n    if d:\n        buffer.append(d)\n    else:\n        break\ndata = b''.join(buffer)\n```","url":"","summary":"","reference":"","dot":""},{"prefix":"s.","tag":"close()","suffix":"","desc":"关闭连接","url":"","summary":"","reference":"","dot":""}]},{"title":"python server","fold":false,"list":[{"prefix":"s","tag":".bind","suffix":"((host,port))","desc":"监听端口`s.bind(('127.0.0.1', 9999))`","url":"","summary":"","reference":"","dot":""},{"prefix":"s","tag":".listen","suffix":"(max)","desc":"调用listen()方法开始监听端口，传入的参数指定等待连接的最大数量\n```\ns.listen(5)\nprint('Waiting for connection...')\n```","url":"","summary":"","reference":"","dot":""},{"prefix":"s.","tag":"accept()","suffix":"","desc":"服务器程序通过一个永久循环来接受来自客户端的连接，accept()会等待并返回一个客户端的连接:\n```\nwhile True:\n    # 接受一个新连接:\n    sock, addr = s.accept()\n    # 创建新线程来处理TCP连接:\n    t = threading.Thread(target=tcplink, args=(sock, addr))\n    t.start()\n```","url":"","summary":"每个连接都必须创建新线程（或进程）来处理，否则，单线程在处理连接的过程中，无法接受其他客户端的连接：\n```\ndef tcplink(sock, addr):\n    print('Accept new connection from %s:%s...' % addr)\n    sock.send(b'Welcome!')\n    while True:\n        data = sock.recv(1024)\n        time.sleep(1)\n        if not data or data.decode('utf-8') == 'exit':\n            break\n        sock.send(('Hello, %s!' % data.decode('utf-8')).encode('utf-8'))\n    sock.close()\n    print('Connection from %s:%s closed.' % addr)\n```","reference":"","dot":""}]}]}]},{"column":[{"title":"UDP","barcolor":"","fold":false,"box":[{"title":"node dgram","fold":false,"list":[{"prefix":"","tag":"dgram.createSocket","suffix":"('udp4|6')","desc":"创建一个 dgram.Socket 对象\ncallback <Function> 为 'message' 事件绑定一个监听器。","url":"","summary":"# server\n```\n// 例子：UDP服务端\nvar PORT = 33333;\nvar HOST = '127.0.0.1';\n\nvar dgram = require('dgram');\nvar server = dgram.createSocket('udp4');\n\nserver.on('listening', function () {\n    var address = server.address();\n    console.log('UDP Server listening on ' + address.address + \":\" + address.port);\n});\n\nserver.on('message', function (message, remote) {\n    console.log(remote.address + ':' + remote.port +' - ' + message);\n});\n\nserver.bind(PORT, HOST);\n```\n# 客户端\n```\n// 例子：UDP客户端\nvar PORT = 33333;\nvar HOST = '127.0.0.1';\n\nvar dgram = require('dgram');\nvar message = Buffer.from('My KungFu is Good!');\n\nvar client = dgram.createSocket('udp4');\n\nclient.send(message, PORT, HOST, function(err, bytes) {\n    if (err) throw err;\n    console.log('UDP message sent to ' + HOST +':'+ PORT);\n    client.close();\n});\n```","reference":"","dot":""},{"prefix":"socket","tag":".bind","suffix":"(port)","desc":"","url":"","summary":"","reference":"","dot":""},{"prefix":"socket","tag":".on","suffix":"(event,fn)","desc":"+ listening\n当一个 socket 开始监听数据包信息时， 'listening' 事件将被触发。 该事件会在创建 UDP socket 之后被立即触发。\n+ **message**\n当有新的数据包被 socket 接收时， 'message' 事件会被触发。msg 和 rinfo 会作为参数传递到该事件的处理函数中。\n+ connect\n因 connect() 调用成功而使 socket 与远程地址关联之后，则会触发 'connect' 事件。\n+ close \n'close' 事件将在使用 close() 关闭一个 socket 之后触发。 该事件一旦触发，则这个 socket 上将不会触发新的 'message' 事件。\n+ error\n当有任何错误发生时， 'error' 事件将被触发。 事件发生时，事件处理函数仅会接收到一个 Error 对象。","url":"","summary":"","reference":"","dot":""},{"prefix":"socket","tag":".send","suffix":"(msg,[port,host],fn)","desc":"在 socket 上广播一个数据包","url":"","summary":"","reference":"","dot":""},{"prefix":"socket","tag":".setBroadcast","suffix":"(flag)","desc":"设置或清除 SO_BROADCAST socket 选项。 当设置为 true, UDP 包可能会被发送到一个本地接口的广播地址。","url":"","summary":"```\nvar dgram = require('dgram');\nvar client = dgram.createSocket('udp4');\nvar msg = Buffer.from('hello world');\nvar port = 33333;\nvar host = '255.255.255.255';\n\nclient.bind(function(){\n    client.setBroadcast(true);\n    client.send(msg, port, host, function(err){\n        if(err) throw err;\n        console.log('msg has been sent');\n        client.close();\n    });\n});\n```","reference":"参考资料|https://segmentfault.com/a/1190000013092163","dot":""}]},{"title":"python dgram","fold":false,"list":[{"prefix":"","tag":"socket.socket","suffix":"(socket.AF_INET, socket.SOCK_DGRAM)","desc":"`s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)`\n不需要调用listen()方法，而是直接接收来自任何客户端的数据","url":"","summary":"","reference":"参考资料|https://www.liaoxuefeng.com/wiki/1016959663602400/1017790181885952","dot":""},{"prefix":"s","tag":".bind","suffix":"((host,port))","desc":"绑定端口","url":"","summary":"","reference":"","dot":""},{"prefix":"s.","tag":"sendto","suffix":"(data)","desc":"服务器收到数据后，直接调用sendto()就可以把数据用UDP发给客户端\n客户端也不需要调用connect()，直接通过sendto()给服务器发数据","url":"","summary":"","reference":"","dot":""}]}]}]},{"column":[{"title":"IP","barcolor":"","fold":false,"box":[{"title":"node","fold":false,"list":[{"prefix":"","tag":"net.isIP","suffix":"(val)","desc":"测试输入是否是 IP 地址。\n+ 无效的字符串则返回 0\n+ IPv4 地址则返回 4\n+ IPv6 的地址则返回 6","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"net.isIPv4","suffix":"(val)","desc":"如果输入是 IPv4 地址则返回 true，否则返回 false","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"net.isIPv6","suffix":"(val)","desc":"如果输入是 IPv6 地址则返回 true，否则返回 false","url":"","summary":"","reference":"","dot":""}]}]},{"title":"URL","barcolor":"","fold":false,"box":[{"title":"url","fold":false,"list":[{"prefix":"","tag":"new URL","suffix":"(path,base)","desc":"生成URL\nurl.hash\nurl.host\nurl.hostname\nurl.href\nurl.origin\nurl.password\nurl.pathname\nurl.port\nurl.protocol\nurl.search\nurl.searchParams\nurl.username\nurl.toString()","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"new URLSearchParams","suffix":"(val)","desc":"生成字符串查询对象,只读\nurlSearchParams.append(name, value)\nurlSearchParams.delete(name)\nurlSearchParams.entries()\nurlSearchParams.forEach(fn[, thisArg])\nurlSearchParams.get(name)\nurlSearchParams.getAll(name)\nurlSearchParams.has(name)\nurlSearchParams.keys()\nurlSearchParams.set(name, value)\nurlSearchParams.sort()\nurlSearchParams.toString()\nurlSearchParams.values()\nurlSearchParams[Symbol.iterator]()","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"url.domainToASCII","suffix":"(domain)","desc":"域名编码 `url.domainToASCII(domain)`\n域名解码 `url.domainToUnicode(domain)`\n返回 Punycode ASCII 序列化的 domain。 如果 domain 是无效域名，则返回空字符串。\n```\nconsole.log(url.domainToASCII('中文.com'));\n// 打印 xn--fiq228c.com\n```","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"url.pathToFileURL","suffix":"(path)","desc":"文件路径编码 `url.pathToFileURL(path)`\n文件路径解码 `url.fileURLToPath(url)`\n此方法保证百分号编码字符解码结果的正确性，同时也确保绝对路径字符串在不同平台下的有效性。","url":"","summary":"","reference":"","dot":""}]}]}]},{"column":[{"title":"Spider","barcolor":"","fold":false,"box":[{"title":"python","fold":false,"list":[{"prefix":"","tag":"HTMLParser","suffix":"","desc":"https://www.liaoxuefeng.com/wiki/1016959663602400/1017784593019776","url":"","summary":"","reference":"","dot":""}]}]}]}]}