{"version":1581073840080,"name":"lua","data":[{"column":[{"title":"数据类型","barcolor":"","fold":false,"box":[{"title":"数据类型","fold":false,"list":[{"prefix":"","tag":"数字型 ","suffix":"number","desc":"表示双精度类型的实浮点数","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"布尔型 ","suffix":"boolean","desc":"值：true,false","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"字符串 ","suffix":"string ..","desc":"字符串拼接符 ..","url":"","summary":"字符串由一对双引号或单引号来表示。\n也可以用 2 个方括号 \"[[]]\" 来表示\"一块\"字符串。\n```lua\nstring1 = \"this is string1\"\nstring2 = 'this is string2'\nhtml = [[\n<html>\n<head></head>\n<body>\n</body>\n</html>\n]]\n```","reference":"","dot":""},{"prefix":"","tag":"无效型 ","suffix":"nil","desc":"只有值nil属于该类，表示一个无效值","url":"","summary":"nil 作比较时应该加上双引号 \"\n```lua\ntype(X)\nnil\ntype(X)==nil\nfalse\ntype(X)==\"nil\"\ntrue\n```","reference":"","dot":""},{"prefix":"","tag":"函数 ","suffix":"function","desc":"由 C 或 Lua 编写的函数","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"表 ","suffix":"table","desc":"关联数组，索引可以是数字、字符串或表类型\ntab = { key1 = \"val1\", key2 = \"val2\", \"val3\" }\nLua 里表的默认初始索引一般以 1 开始\n访问 tab[i] 或 tab.i","url":"","summary":"```lua\n-- 创建一个空的 table\nlocal tbl1 = {}\n-- 直接初始表\nlocal tbl2 = {\"apple\", \"pear\", \"orange\", \"grape\"}\n```","reference":"","dot":""},{"prefix":"","tag":"C数据结构 ","suffix":"userdata","desc":"表示任意存储在变量中的C数据结构","url":"","summary":"","reference":"","dot":""},{"prefix":"","tag":"线程 ","suffix":"thread","desc":"表示执行的独立线路，用于执行协同程序","url":"","summary":"","reference":"","dot":""}]}]},{"title":"语法","barcolor":"","fold":false,"box":[{"title":"声明与作用域","fold":false,"list":[{"prefix":"","tag":"x ","suffix":"= val","desc":"全局变量","url":"","summary":"在默认情况下，变量总是认为是全局的。\n全局变量不需要声明，给一个变量赋值后即创建了这个全局变量，访问一个没有初始化的全局变量也不会出错，只不过得到的结果是：nil。\n如果你想删除一个全局变量，只需要将变量赋值为nil。\n-------------\nLua 可以对多个变量同时赋值，变量列表和值列表的各个元素用逗号分开，赋值语句右边的值会依次赋给左边的变量。\nx, y = y, x                     -- swap 'x' for 'y'\n当变量个数和值的个数不一致时，Lua会一直以变量个数为基础采取以下策略：\na. 变量个数 > 值的个数             按变量个数补足nil\nb. 变量个数 < 值的个数             多余的值会被忽略","reference":"","dot":""},{"prefix":"","tag":"local ","suffix":"x = val","desc":"局部变量","url":"","summary":"Lua 中的变量全是全局变量，那怕是语句块或是函数里，除非用 local 显式声明为局部变量。\n局部变量的作用域为从声明位置开始到所在语句块结束。\n变量的默认值均为 nil。","reference":"","dot":""}]}]}]}]}