{"version":1584951135138,"name":"database","data":[{"column":[{"title":"HTTP","barcolor":"","fold":false,"box":[{"title":"Content-Type","fold":false,"list":[{"prefix":"","tag":"application/x-www-form-urlencoded","suffix":"","desc":"1. 浏览器的原生<form> 表单，如果不设置 enctype 属性，那么最终就会此方式提交数据\n2. 提交的数据按照 `key1=val1&key2=val2` 的方式进行编码，key和val都进行了 URL 转码\n3. `jQuery` 和 QWrap 的 Ajax，Content-Type 默认值都是「application/x-www-form-urlencoded;charset=utf-8」。","url":"","summary":"```\nPOST http://www.example.com HTTP/1.1\nContent-Type: application/x-www-form-urlencoded;charset=utf-8\n\ntitle=test&sub%5B%5D=1&sub%5B%5D=2&sub%5B%5D=3\n```","reference":"","dot":""},{"prefix":"","tag":"multipart/form-data","suffix":"","desc":"我们使用表单上传文件时，必须让 <form> 表单的 enctype 等于 multipart/form-data\n现阶段标准中原生 <form> 表单也只支持这两种方式","url":"","summary":"```\nPOST http://www.example.com HTTP/1.1\nContent-Type:multipart/form-data; boundary=----WebKitFormBoundaryrGKCBY7qhFd3TrwA\n\n------WebKitFormBoundaryrGKCBY7qhFd3TrwA\nContent-Disposition: form-data; name=\"text\"\n\ntitle\n------WebKitFormBoundaryrGKCBY7qhFd3TrwA\nContent-Disposition: form-data; name=\"file\"; filename=\"chrome.png\"\nContent-Type: image/png\n\nPNG ... content of chrome.png ...\n------WebKitFormBoundaryrGKCBY7qhFd3TrwA--\n```\n\n1. 首先生成了一个 boundary 用于分割不同的字段，为了避免与正文内容重复，boundary 很长很复杂。\n2. 以 --boundary 开始，紧接着是内容描述信息，然后是回车，最后是字段具体内容（文本或二进制）。如果传输的是文件，还要包含文件名和文件类型信息。消息主体最后以 --boundary-- 标示结束。关于 multipart/form-data 的详细定义，请前往 [rfc1867](https://www.ietf.org/rfc/rfc1867.txt) 查看。","reference":"","dot":""},{"prefix":"","tag":"application/json","suffix":"","desc":"rest主流\nphp 就无法通过 $_POST 对象从上面的请求中获得内容","url":"","summary":"```\nPOST http://www.example.com HTTP/1.1 \nContent-Type: application/json;charset=utf-8\n\n{\"title\":\"test\",\"sub\":[1,2,3]}\n```","reference":"参考资料|https://imququ.com/post/four-ways-to-post-data-in-http.html","dot":""}]}]}]}]}